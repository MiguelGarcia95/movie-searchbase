{"version":3,"sources":["reducers/movieReducers.js","actions/types.js","reducers/authReducers.js","reducers/tvShowReducers.js","reducers/searchReducers.js","reducers/settingsReducers.js","reducers/peopleReducers.js","utils/functions.js","reducers/accountReducers.js","reducers/index.js","store.js","components/Home/HomeDisplay.jsx","components/layout/Slide.jsx","components/layout/ContentSlider.jsx","actions/settingsActions.js","components/Home/HomeSwitch.jsx","utils/settings.js","components/Home/HomeContent.jsx","api_keys.js","actions/movieActions.js","actions/tvShowActions.js","components/App.js","actions/authActions.js","components/Auth/Login.jsx","actions/accountActions.js","components/Account/UserPanel.jsx","components/Account/SidepanelPanel.jsx","components/Account/AccountSlide.jsx","components/Account/AccountSlider.jsx","components/Account/Account.jsx","actions/searchActions.js","components/Search/MovieResult.jsx","components/Search/ResultSwitch.jsx","components/Search/Pagination.jsx","components/Search/SearchResults.jsx","components/Display/FavoriteCircle.jsx","components/Display/WatchCircle.jsx","components/Display/RatingCircle.jsx","components/Display/DisplayHeader.jsx","components/layout/CastSlide.jsx","components/layout/CastSlider.jsx","components/Display/DisplayTv.jsx","components/Display/DisplayMovie.jsx","components/Display/DisplayPeople.jsx","actions/peopleActions.js","components/layout/MyNavbar.jsx","components/layout/MyFooter.jsx","serviceWorker.js","index.js"],"names":["initialState","upcomingMovies","topRatedMovies","nowPlayingMovies","popularMovies","movieGenres","currentMovie","currentMoviesVideos","currentMoviesCredits","currentMoviesReviews","similarMovies","movieReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","token_id","session_id","account","authReducers","topRatedShows","onTheAirShows","onTheAirTodayShows","popularShows","showGenres","currentShow","currentShowVideos","currentShowCredits","currentShowReviews","similarShows","tvShowsReducer","moviesSearchResults","moviesCurrentPage","moviesTotalPages","moviesTotalResults","showsSearchResults","showsCurrentPage","showsTotalPages","showsTotalResults","searchReducer","settingsReducer","currentPerson","currentPersonMovieCredits","currentPersonShowCredits","currentPersonCredits","currentPersonImages","currentPersonTaggedImages","peopleReducer","getTitle","movie","title","name","getYear","release_date","slice","first_air_date","getGenre","genres","genreId","reduce","genreName","genre","id","getGenreFromId","genre_ids","getPoster","poster_path","concat","getCastImage","character","profile_path","getImage","backdrop_path","removeItemFromList","movies","newItemArray","item","push","message","favoriteShows","favoriteShowsTotalResults","favoriteMovies","favoriteMoviesTotalResults","showWatchlist","showWatchlistTotalResults","movieWatchlist","movieWatchlistTotalResults","accountReducers","removedId","rootReducer","combineReducers","movieReducers","shows","tvShowReducers","auth","results","searchReducers","settings","settingsReducers","people","peopleReducers","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","HomeDisplay","_ref","fetchType","react_default","a","createElement","className","imageStyle","backgroundImage","backgroundRepeat","backgroundSize","Link","key","to","style","displayHomeCol","map","displayTopInnerCol","displayBottomInnerCol","displayBottomCol","Slide","vote_average","ContentSlider","lib_default","layout_Slide","displayMovies","setType","dispatch","isFetchShows","connect","onClick","castSliderSettings","centerMode","infinite","centerPadding","slidesToShow","speed","responsive","breakpoint","castSliderSettings1","movieTvSliderSettings","arrows","swipeToSlide","initialSlide","movieTvSliderSettings7","movieTvSliderSettings6","movieTvSliderSettings5","movieTvSliderSettings4","movieTvSliderSettings3","movieTvSliderSettings2","movieTvSliderSettings1","HomeContent","Home_HomeSwitch","movieSlider","layout_ContentSlider","dispalySliders","MOVIEDBAPI","fetchMovieGenres","_ref5","asyncToGenerator","regenerator_default","mark","_callee5","wrap","_context5","prev","next","axios","get","sent","data","stop","this","_x5","fetchShowGenres","App","shouldComponentFetchShows","newType","oldType","showArray","homeDisplayMovies","_this","props","getGenres","getContentMovies","fetchTopRatedMovies","fetchNowPlayingMovies","fetchUpcomingMovies","fetchPopularMovies","prevProps","prevState","fetchTopRatedShows","fetchOnTheAirShows","fetchPopularShows","fetchOnTheAirTodayShows","contentMovies","Home_HomeDisplay","Home_HomeContent","React","Component","_callee","_context","_x","_ref4","_callee4","_context4","_x4","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","setSession","Login","onLoginClick","url","getSession","getToken","loginHref","href","response","request_token","setAccount","UserPanel","src","avatar","gravatar","hash","alt","username","SidepanelPanel","count","AccountSlide","sliderType","removeFromList","sessionId","accountId","getSlidesToShow","width","AccountSlider","totalResults","sliderName","dots","slidesToScroll","Account_AccountSlide","Account","fetchedAccountData","displayMessage","setAccountDetails","getFavoriteMovies","getFavoriteShows","getMovieWatchlist","getShowWatchlist","shouldRedirectToLogin","redirect","location","search","localStorage","getItem","shouldRedirectToAccount","getApproved","path","approvedPath","match","RegExp","getRequestToken","tokenPath","setToken","JSON","parse","_this2","setState","getAccount","setTimeout","deleteMessage","redirectToAccount","redirectToLogin","_this$props","removeFromFavorites","removeFromWatchlist","_this$props2","_this$props3","_this$props4","_this$props5","Fragment","Redirect","Account_UserPanel","Account_SidepanelPanel","Account_AccountSlider","token","post","then","setItem","catch","err","console","log","tokenId","stringify","total_results","mediaType","mediaId","media_type","media_id","favorite","watchlist","fetchMoviesSearch","searchQuery","page","total_pages","fetchShowsSearch","MovieResult","toFixed","Pagination","isTypeMovie","isDisabledClass","status","getLastPage","getCurrentPage","isPrevPaginationDisabled","isDisabled","isNextPaginationDisabled","updateResults","direction","moviePage","updatePage","showPage","currentPage","goToPage","prevPaginationStatus","nextPaginationStatus","prevPaginationStatusClass","nextPaginationStatusClass","SearchResults","fetchMovies","params","fetchShows","displayResults","Search_MovieResult","getSearchResults","searchResults","Search_ResultSwitch","Search_Pagination","FavoriteCircle","addToFavorites","WatchCircle","addToWatchlist","RatingCircle","rating","backgroundPosition","backgroundAttachment","Display_FavoriteCircle","Display_WatchCircle","Display_RatingCircle","overview","substring","CastSlide","CastSlider","cast","layout_CastSlide","displayCast","DisplayTv","fetchShowData","fetchShow","showId","fetchShowCredits","fetchShowReviews","fetchSimilarShows","layout_CastSlider","displaySimilarShows","displayReviews","reviews","review","author","content","Number","Display_DisplayHeader","_ref6","_callee6","result","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref10","_callee10","_context10","_x10","DisplayMovie","fetchMovieData","fetchMovie","movieId","fetchMovieCredits","fetchMovieReviews","fetchSimilarMovies","displaySimilarMovies","DisplayPeople","fetchPeopleData","fetchPeople","peopleId","fetchPeopleMovieCredits","fetchPeopleShowCredits","fetchPeopleImages","fetchPeopleTaggedImages","displayShows","displayImages","images","allImages","sortImages","displayColImages","firstCol","secondCol","thirdCol","image","index","file_path","imageObject","firstImage","secondImage","forEach","birthday","place_of_birth","biography","toConsumableArray","profiles","MyNavbar","isOpen","isMobile","onWindowResize","navbar","clientWidth","onSearchKeyDown","e","keyCode","target","value","history","onLogoutClick","logout","navbarClass","addEventListener","removeEventListener","ref","node","NavLink","placeholder","onKeyDown","clear","MyFooter","Boolean","hostname","createHashHistory","basename","process","createHistory","RootWithAuth","withRouter","BrowserRouter","Route","component","Switch","exact","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2696fedc.chunk.js","sourcesContent":["import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  upcomingMovies: [],\r\n  topRatedMovies: [],\r\n  nowPlayingMovies: [],\r\n  popularMovies: [],\r\n  movieGenres: [],\r\n  currentMovie: null,\r\n  currentMoviesVideos: null,\r\n  currentMoviesCredits: null,\r\n  currentMoviesReviews: null,\r\n  similarMovies: null\r\n};\r\n\r\nconst movieReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_POPULAR_MOVIES:\r\n      return {\r\n        ...state,\r\n        popularMovies: action.payload.popularMovies\r\n      }\r\n    case actionTypes.FETCH_NOW_PLAYING_MOVIES:\r\n      return {\r\n        ...state,\r\n        nowPlayingMovies: action.payload.nowPlayingMovies\r\n      }\r\n    case actionTypes.FETCH_TOP_RATED_MOVIES:\r\n      return {\r\n        ...state,\r\n        topRatedMovies: action.payload.topRatedMovies\r\n      }\r\n    case actionTypes.FETCH_MOVIE_GENRES:\r\n      return {\r\n        ...state,\r\n        movieGenres: action.payload.movieGenres\r\n      }\r\n    case actionTypes.FETCH_UPCOMING_MOVIES:\r\n      return {\r\n        ...state,\r\n        upcomingMovies: action.payload.upcomingMovies\r\n      }\r\n    case actionTypes.GET_MOVIE:\r\n      return {\r\n        ...state,\r\n        currentMovie: action.payload.currentMovie\r\n      }\r\n    case actionTypes.GET_MOVIE_CREDITS:\r\n      return {\r\n        ...state,\r\n        currentMoviesCredits: action.payload.currentMoviesCredits,\r\n      }\r\n    case actionTypes.GET_MOVIE_REVIEWS:\r\n      return {\r\n        ...state,\r\n        currentMoviesReviews: action.payload.currentMoviesReviews\r\n      }\r\n    case actionTypes.GET_MOVIE_VIDEOS:\r\n      return {\r\n        ...state,\r\n        currentMoviesVideos: action.payload.currentMoviesVideos\r\n      }\r\n    case actionTypes.GET_SIMILAR_MOVIES:\r\n      return {\r\n        ...state,\r\n        similarMovies: action.payload.similarMovies\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default movieReducer;\r\n","// Auth\r\nexport const LOGOUT  = 'LOGOUT';\r\nexport const GET_ACCOUNT = 'GET_ACCOUNT';\r\nexport const SET_ACCOUNT = 'SET_ACCOUNT';\r\nexport const GET_TOKEN = 'GET_TOKEN';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\nexport const GET_SESSION  = 'GET_SESSION';\r\nexport const SET_SESSION = 'SET_SESSION';\r\n\r\n// SETTINGS\r\nexport const SET_TYPE = 'SET_TYPE';\r\n\r\n// People\r\nexport const FETCH_PEOPLE = 'FETCH_PEOPLE';\r\nexport const FETCH_PEOPLE_MOVIE_CREDITS = 'FETCH_PEOPLE_MOVIE_CREDITS';\r\nexport const FETCH_PEOPLE_SHOW_CREDITS = 'FETCH_PEOPLE_SHOW_CREDITS';\r\nexport const FETCH_PEOPLE_IMAGES = 'FETCH_PEOPLE_IMAGES';\r\nexport const FETCH_PEOPLE_TAGGED_IMAGES = 'FETCH_PEOPLE_TAGGED_IMAGES';\r\n\r\n// Search\r\nexport const FETCH_SEARCH_RESULTS = 'FETCH_SEARCH_RESULTS';\r\nexport const SEARCH_MOVIE_RESULTS = 'SEARCH_MOVIE_RESULTS';\r\nexport const SEARCH_SHOW_RESULTS = 'SEARCH_SHOW_RESULTS';\r\nexport const RESET_RESULTS = 'RESET_RESULTS';\r\n\r\n// Movies\r\nexport const FETCH_POPULAR_MOVIES = 'FETCH_POPULAR_MOVIES';\r\nexport const FETCH_TOP_RATED_MOVIES = 'FETCH_TOP_RATED_MOVIES';\r\nexport const FETCH_UPCOMING_MOVIES = 'FETCH_UPCOMING_MOVIES';\r\nexport const FETCH_NOW_PLAYING_MOVIES = 'FETCH_NOW_PLAYING_MOVIES';\r\nexport const FETCH_MOVIE_GENRES = 'FETCH_MOVIE_GENRES';\r\nexport const GET_MOVIE = 'GET_MOVIE';\r\nexport const GET_MOVIE_CREDITS = 'GET_MOVIE_CREDITS';\r\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\r\nexport const GET_MOVIE_VIDEOS = 'GET_MOVIE_VIDEOS';\r\nexport const GET_SIMILAR_MOVIES = 'GET_SIMILAR_MOVIES';\r\n\r\n//TV Shows\r\nexport const FETCH_POPULAR_SHOWS = 'FETCH_POPULAR_SHOWS';\r\nexport const FETCH_TOP_RATED_SHOWS = 'FETCH_TOP_RATED_SHOWS';\r\nexport const FETCH_ON_THE_AIR_SHOWS = 'FETCH_ON_THE_AIR_SHOWS';\r\nexport const FETCH_ON_THE_AIR_TODAY_SHOWS = 'FETCH_ON_THE_AIR_TODAY_SHOWS';\r\nexport const FETCH_SHOW_GENRES = 'FETCH_SHOW_GENRES';\r\nexport const GET_SHOW = 'GET_SHOW';\r\nexport const GET_SHOW_CREDITS = 'GET_SHOW_CREDITS';\r\nexport const GET_SHOW_REVIEWS = 'GET_SHOW_REVIEWS';\r\nexport const GET_SHOW_VIDEOS = 'GET_SHOW_VIDEOS';\r\nexport const GET_SIMILAR_SHOWS = 'GET_SIMILAR_SHOWS';\r\n\r\n// Account \r\nexport const GET_FAVORITE_SHOWS = 'GET_FAVORITE_SHOWS';\r\nexport const GET_SHOW_WATCHLIST = 'GET_SHOW_WATCHLIST';\r\nexport const GET_FAVORITE_MOVIES = 'GET_FAVORITE_MOVIES';\r\nexport const GET_MOVIE_WATCHLIST = 'GET_MOVIE_WATCHLIST';\r\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\r\nexport const ADD_TO_WATCHLIST = 'ADD_TO_WATCHLIST';\r\nexport const REMOVE_FROM_WATCHLIST = 'REMOVE_FROM_WATCHLIST';\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  token_id: null,\r\n  session_id: null,\r\n  account: null\r\n};\r\n\r\nconst authReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        token_id: action.payload.token_id,\r\n        account: action.payload.account,\r\n        session_id: action.payload.session_id\r\n      }\r\n    case actionTypes.GET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token_id: action.payload.token_id\r\n      }\r\n    case actionTypes.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token_id: action.payload.token_id\r\n      }\r\n    case actionTypes.GET_SESSION:\r\n      return {\r\n        ...state,\r\n        session_id: action.payload.session_id\r\n      }\r\n    case actionTypes.SET_SESSION:\r\n      return {\r\n        ...state,\r\n        session_id: action.payload.session_id\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducers;","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  topRatedShows: [],\r\n  onTheAirShows: [],\r\n  onTheAirTodayShows: [],\r\n  popularShows: [],\r\n  showGenres: [],\r\n  currentShow: null,\r\n  currentShowVideos: null,\r\n  currentShowCredits: null,\r\n  currentShowReviews: null,\r\n  similarShows: null\r\n};\r\n\r\nconst tvShowsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_POPULAR_SHOWS:\r\n      return {\r\n        ...state,\r\n        popularShows: action.payload.popularShows\r\n      }\r\n    case actionTypes.FETCH_ON_THE_AIR_SHOWS:\r\n      return {\r\n        ...state,\r\n        onTheAirShows: action.payload.onTheAirShows\r\n      }\r\n    case actionTypes.FETCH_ON_THE_AIR_TODAY_SHOWS:\r\n      return {\r\n        ...state,\r\n        onTheAirTodayShows: action.payload.onTheAirTodayShows\r\n      }\r\n    case actionTypes.FETCH_SHOW_GENRES:\r\n      return {\r\n        ...state,\r\n        showGenres: action.payload.showGenres\r\n      }\r\n    case actionTypes.FETCH_TOP_RATED_SHOWS:\r\n      return {\r\n        ...state,\r\n        topRatedShows: action.payload.topRatedShows\r\n      }\r\n    case actionTypes.GET_SHOW:\r\n      return {\r\n        ...state,\r\n        currentShow: action.payload.currentShow\r\n      }\r\n    case actionTypes.GET_SHOW_CREDITS:\r\n      return {\r\n        ...state,\r\n        currentShowCredits: action.payload.currentShowCredits\r\n      }\r\n    case actionTypes.GET_SHOW_REVIEWS:\r\n      return {\r\n        ...state,\r\n        currentShowReviews: action.payload.currentShowReviews\r\n      }\r\n    case actionTypes.GET_SHOW_VIDEOS:\r\n      return {\r\n        ...state,\r\n        currentShowVideos: action.payload.currentShowVideos\r\n      }\r\n    case actionTypes.GET_SIMILAR_SHOWS:\r\n      return {\r\n        ...state,\r\n        similarShows: action.payload.similarShows\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tvShowsReducer;","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  moviesSearchResults: [],\r\n  moviesCurrentPage: null,\r\n  moviesTotalPages: null,\r\n  moviesTotalResults: null,\r\n  \r\n  showsSearchResults: [],\r\n  showsCurrentPage: null,\r\n  showsTotalPages: null,\r\n  showsTotalResults: null,\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SEARCH_MOVIE_RESULTS:\r\n      return {\r\n        ...state,\r\n        moviesSearchResults: action.payload.moviesSearchResults,\r\n        moviesCurrentPage: action.payload.moviesCurrentPage,\r\n        moviesTotalPages: action.payload.moviesTotalPages,\r\n        moviesTotalResults: action.payload.moviesTotalResults\r\n      }\r\n    case actionTypes.SEARCH_SHOW_RESULTS:\r\n      return {\r\n        ...state,\r\n        showsSearchResults: action.payload.showsSearchResults,\r\n        showsCurrentPage: action.payload.showsCurrentPage,\r\n        showsTotalPages: action.payload.showsTotalPages,\r\n        showsTotalResults: action.payload.showsTotalResults\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default searchReducer;","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  type: 'movies'\r\n}\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_TYPE:\r\n      return {\r\n        ...state,\r\n        type: action.payload.type\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default settingsReducer;","import * as actionTypes from '../actions/types';\r\n\r\nconst initialState = {\r\n  currentPerson: null,\r\n  currentPersonMovieCredits: null,\r\n  currentPersonShowCredits: null,\r\n  currentPersonCredits: null,\r\n  currentPersonImages: [],\r\n  currentPersonTaggedImages: []\r\n};\r\n\r\nconst peopleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_PEOPLE:\r\n      return {\r\n        ...state,\r\n        currentPerson: action.payload.currentPerson\r\n      }\r\n    case actionTypes.FETCH_PEOPLE_MOVIE_CREDITS:\r\n      return {\r\n        ...state,\r\n        currentPersonMovieCredits: action.payload.currentPersonMovieCredits\r\n      }\r\n    case actionTypes.FETCH_PEOPLE_SHOW_CREDITS:\r\n      return {\r\n        ...state,\r\n        currentPersonShowCredits: action.payload.currentPersonShowCredits\r\n      }\r\n    case actionTypes.FETCH_PEOPLE_IMAGES:\r\n      return {\r\n        ...state,\r\n        currentPersonImages: action.payload.currentPersonImages\r\n      }\r\n    case actionTypes.FETCH_PEOPLE_TAGGED_IMAGES:\r\n      return {\r\n        ...state,\r\n        currentPersonTaggedImages: action.payload.currentPersonTaggedImages\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default peopleReducer;\r\n\r\n","export const getTitle = (movie, type) => {\r\n  if (type === 'movies') {\r\n    return movie.title\r\n  }  else {\r\n    return movie.name\r\n  }\r\n}\r\n\r\nexport const getYear = (movie, type) => {\r\n  if (type === 'movies') {\r\n    return movie.release_date.slice(0,4);\r\n  } else {\r\n    return movie.first_air_date.slice(0,4);\r\n  }\r\n}\r\n\r\nexport const getGenreFromId = (genreId, genres) => {\r\n  return genres.reduce((genreName, genre) => {\r\n    if (genre.id === genreId) {\r\n      genreName = genre.name;\r\n    }\r\n    return genreName;\r\n  }, '');\r\n}\r\n\r\nexport const getGenre = (movie, genres) => {\r\n  return getGenreFromId(movie.genre_ids[0], genres);\r\n}\r\n\r\nexport const getPoster = currentMovie => {\r\n  if (currentMovie) {\r\n    if (currentMovie.poster_path) {\r\n      return `https://image.tmdb.org/t/p/original${currentMovie.poster_path}`;\r\n    } else {\r\n      return '/movie-searchbase/images/movie/movie_cover.jpg';\r\n    }\r\n  } else {\r\n    return '/movie-searchbase/images/movie/movie_cover.jpg';\r\n  }\r\n}\r\n\r\nexport const getCastImage = character => {\r\n  if (character) {\r\n    if (character.profile_path) {\r\n      return `https://image.tmdb.org/t/p/original${character.profile_path}`;\r\n    } else {\r\n      return '/movie-searchbase/images/movie/movie_cover.jpg';\r\n    }\r\n  } else {\r\n    return '/movie-searchbase/images/movie/movie_cover.jpg';\r\n  }\r\n}\r\n\r\nexport const getImage = (currentMovie) => {\r\n  if (currentMovie) {\r\n    if (currentMovie.backdrop_path) {\r\n      return `https://image.tmdb.org/t/p/original${currentMovie.backdrop_path}`;\r\n    } else {\r\n      return '/movie-searchbase/images/movie/movie_bg.jpeg';\r\n    }\r\n  } else {\r\n    return '/movie-searchbase/images/movie/movie_bg.jpeg';\r\n  }\r\n}\r\n\r\nexport const removeItemFromList = (movies, id) => {\r\n  return movies.reduce((newItemArray, item) => {\r\n    if (item.id !== id) {\r\n      newItemArray.push(item);\r\n    }\r\n    return newItemArray;\r\n  }, [])\r\n}","import * as actionTypes from '../actions/types';\r\nimport {removeItemFromList} from '../utils/functions';\r\n\r\nconst initialState = {\r\n  account: null,\r\n  message: null,\r\n  favoriteShows: [],\r\n  favoriteShowsTotalResults: null,\r\n  favoriteMovies: [],\r\n  favoriteMoviesTotalResults: null,\r\n  showWatchlist: [],\r\n  showWatchlistTotalResults: null,\r\n  movieWatchlist: [],\r\n  movieWatchlistTotalResults: null\r\n};\r\n\r\nconst accountReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        account: action.payload.account\r\n      }\r\n    case actionTypes.SET_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        account: action.payload.account\r\n      }\r\n    case actionTypes.ADD_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message\r\n      }\r\n    case actionTypes.REMOVE_FROM_FAVORITES:\r\n      if (action.payload.type === 'movies') {\r\n        let movies = removeItemFromList(state.favoriteMovies, action.payload.removedId);\r\n        return {\r\n          ...state,\r\n          message: action.payload.message,\r\n          favoriteMovies: movies,\r\n          favoriteMoviesTotalResults: --state.favoriteMoviesTotalResults\r\n        }\r\n      } else {\r\n        let movies = removeItemFromList(state.favoriteShows, action.payload.removedId);\r\n        return {\r\n          ...state,\r\n          message: action.payload.message,\r\n          favoriteShows: movies,\r\n          favoriteShowsTotalResults: --state.favoriteShowsTotalResults \r\n        }\r\n      }\r\n    case actionTypes.ADD_TO_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message\r\n      }\r\n    case actionTypes.REMOVE_FROM_WATCHLIST:\r\n      if (action.payload.type === 'movies') {\r\n        let movies = removeItemFromList(state.movieWatchlist, action.payload.removedId);\r\n        return {\r\n          ...state,\r\n          message: action.payload.message,\r\n          movieWatchlist: movies,\r\n          movieWatchlistTotalResults: --state.movieWatchlistTotalResults\r\n        }\r\n      } else {\r\n        let movies = removeItemFromList(state.showWatchlist, action.payload.removedId);\r\n        return {\r\n          ...state,\r\n          message: action.payload.message,\r\n          showWatchlist: movies,\r\n        showWatchlistTotalResults: --state.showWatchlistTotalResults\r\n        }\r\n      }\r\n    case actionTypes.DELETE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.payload.message\r\n      }\r\n    case actionTypes.GET_FAVORITE_SHOWS:\r\n      return {\r\n        ...state,\r\n        favoriteShows: action.payload.favoriteShows,\r\n        favoriteShowsTotalResults: action.payload.favoriteShowsTotalResults\r\n      }\r\n    case actionTypes.GET_FAVORITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favoriteMovies: action.payload.favoriteMovies,\r\n        favoriteMoviesTotalResults: action.payload.favoriteMoviesTotalResults\r\n      }\r\n    case actionTypes.GET_SHOW_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        showWatchlist: action.payload.showWatchlist,\r\n        showWatchlistTotalResults: action.payload.showWatchlistTotalResults\r\n      }\r\n    case actionTypes.GET_MOVIE_WATCHLIST:\r\n      return {\r\n        ...state,\r\n        movieWatchlist: action.payload.movieWatchlist,\r\n        movieWatchlistTotalResults: action.payload.movieWatchlistTotalResults\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default accountReducers;\r\n","import {combineReducers} from 'redux';\r\nimport movieReducers from './movieReducers';\r\nimport authReducers from './authReducers';\r\nimport tvShowReducers from './tvShowReducers';\r\nimport searchReducers from './searchReducers';\r\nimport settingsReducers from './settingsReducers';\r\nimport peopleReducers from './peopleReducers';\r\nimport accountReducers from './accountReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: movieReducers,\r\n  shows:  tvShowReducers,\r\n  auth: authReducers,\r\n  results: searchReducers,\r\n  settings: settingsReducers,\r\n  people: peopleReducers,\r\n  account: accountReducers\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducers from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store; ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTitle, getYear, getGenre} from '../../utils/functions';\r\nimport './style/css/HomeDisplay.css';\r\n\r\nconst displayBottomCol = (movies, genres, fetchType) => {\r\n  let newMovies = movies.slice(5, 11);\r\n  return newMovies.map(movie => {\r\n    const imageStyle = {\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    }\r\n    return (\r\n      <Link key={movie.id} to={`${fetchType}/${movie.id}`}>\r\n        <section  className=\"home_display_bottom_col\">\r\n          <section className=\"display_content\">\r\n            <section className=\"content_image\" style={imageStyle}></section>\r\n            <section className=\"content_data\">\r\n              <section className=\"content_title\"><h1>{getTitle(movie, fetchType)}</h1></section>\r\n              <section className=\"content_details\"><p>{getYear(movie, fetchType)} / {getGenre(movie, genres)}</p></section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </Link>\r\n    );\r\n  })\r\n}\r\n\r\nconst displayTopInnerCol = (movies, genres, fetchType) => {\r\n  let newMovies = movies.slice(1, 3);\r\n  return newMovies.map(movie => {\r\n    const imageStyle = {\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    }\r\n    return (\r\n      <Link key={movie.id} to={`${fetchType}/${movie.id}`}>\r\n        <section className=\"home_display_inner_col\">\r\n          <section className=\"display_content\">\r\n            <section className=\"content_image\" style={imageStyle}></section>\r\n            <section className=\"content_data\">\r\n              <section className=\"content_title\"><h1>{getTitle(movie, fetchType)}</h1></section>\r\n              <section className=\"content_details\"><p>{getYear(movie, fetchType)} / {getGenre(movie, genres)}</p></section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </Link>\r\n    );\r\n  })\r\n}\r\n\r\nconst displayBottomInnerCol = (movies, genres, fetchType) => {\r\n  let newMovies = movies.slice(3, 5);\r\n  return newMovies.map(movie => {\r\n    const imageStyle = {\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    }\r\n    return (\r\n      <Link key={movie.id} to={`${fetchType}/${movie.id}`}>\r\n        <section className=\"home_display_inner_col\">\r\n          <section className=\"display_content\">\r\n            <section className=\"content_image\" style={imageStyle}></section>\r\n            <section className=\"content_data\">\r\n              <section className=\"content_title\"><h1>{getTitle(movie, fetchType)}</h1></section>\r\n              <section className=\"content_details\"><p>{getYear(movie, fetchType)} / {getGenre(movie, genres)}</p></section>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </Link>\r\n    );\r\n  })\r\n}\r\n\r\nconst displayHomeCol = (movie, genres, fetchType) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n  }\r\n  return (\r\n    <Link key={movie.id} to={`${fetchType}/${movie.id}`}>\r\n      <section className=\"home_display_col\">\r\n        <section className=\"display_content\">\r\n          <section className=\"content_image\" style={imageStyle} ></section>\r\n          <section className=\"content_data\">\r\n            <section className=\"content_title\"><h1>{getTitle(movie, fetchType)}</h1></section>\r\n            <section className=\"content_details\"><p>{getYear(movie, fetchType)} / {getGenre(movie, genres)}</p></section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst HomeDisplay = ({movies, genres, fetchType}) => {\r\n  return (\r\n    <section className='home_display'>\r\n      <section className=\"home_display_row\">\r\n        {movies.length > 0 && displayHomeCol(movies[0], genres, fetchType)}\r\n        <section className=\"home_display_col second\">\r\n          <section className=\"home_display_inner_row\">\r\n            {movies && displayTopInnerCol(movies, genres, fetchType)}\r\n          </section>  \r\n          <section className=\"home_display_inner_row\">\r\n            {movies && displayBottomInnerCol(movies, genres, fetchType)}\r\n          </section>  \r\n        </section>\r\n      </section>\r\n      <section className=\"home_display_bottom_row\">\r\n        {movies.length && displayBottomCol(movies, genres, fetchType)}\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default HomeDisplay;","import React from 'react';\r\nimport './style/css/Slide.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTitle, getYear, getGenre, getPoster} from '../../utils/functions';\r\n\r\nconst Slide = ({movie, type, genres}) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(${getPoster(movie)})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n  }\r\n  return (\r\n    <section className=\"search_result slide\">\r\n      <section className=\"search_result_movie\">\r\n        <section className=\"search_result_movie_image\" style={imageStyle}></section>\r\n        <p className=\"search_result_movie_rating\">{movie.vote_average}</p>  \r\n        <Link to={`/${type}/${movie.id}`}>\r\n          <p className=\"search_result_movie_link\"><i className=\"fas fa-expand-arrows-alt \"></i></p>  \r\n        </Link>\r\n      </section>\r\n      <section className=\"search_result_movie_data\">\r\n          <section className=\"search_result_movie_meta\"><p>{getYear(movie, type)} / {getGenre(movie, genres)}</p></section>  \r\n          <section className=\"search_result_movie_title\"><p>{getTitle(movie, type)}</p></section>  \r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Slide;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport Slide from './Slide';\r\n\r\nconst displayMovies = (movies, type, genres) => {\r\n  return movies.map(movie => {\r\n    return <Slide key={movie.id} movie={movie} type={type} genres={genres} />\r\n  })\r\n}\r\n\r\nconst ContentSlider = ({movies, settings, type, genres}) => {\r\n  return (\r\n    <div>\r\n      <Slider {...settings}>\r\n        {displayMovies(movies, type, genres)}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentSlider;","import * as actionTypes from './types';\r\n\r\nexport const setType = type => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SET_TYPE,\r\n      payload: {\r\n        type: type\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setType} from '../../actions/settingsActions';\r\nimport './style/css/HomeSwitch.css';\r\n\r\nconst isFetchMovies = fetchType => fetchType === 'movies' ? 'active' : ''; \r\nconst isFetchShows = fetchType => fetchType === 'shows' ? 'active' : ''; \r\n\r\nconst HomeSwitch = ({type, setType}) => {\r\n  return (\r\n    <section className=\"home_switch_container\">\r\n      <section className=\"home_switch\">\r\n        <section className={`home_switch_select ${isFetchMovies(type)}`}>\r\n          <p className=\"home_switch_select_content\" onClick={() => setType('movies')}>Movies</p>\r\n          <section className=\"home_switch_select_color\"></section>\r\n        </section>\r\n        <section className={`home_switch_select ${isFetchShows(type)}`}>\r\n          <p className=\"home_switch_select_content\" onClick={() => setType('shows')}>Shows</p>\r\n          <section className=\"home_switch_select_color\"></section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    type: state.settings.type\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setType: type => dispatch(setType(type))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSwitch);","export const castSliderSettings = {\r\n  className: \"center\",\r\n  centerMode: true,\r\n  infinite: true,\r\n  centerPadding: \"20px\",\r\n  slidesToShow: 3,\r\n  speed: 500,\r\n  responsive: [\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        centerPadding: \"0px\",\r\n      }\r\n    },\r\n  ]\r\n};\r\n\r\nexport const castSliderSettings1 = {\r\n  className: \"center\",\r\n  centerMode: true,\r\n  infinite: true,\r\n  centerPadding: \"20px\",\r\n  slidesToShow: 1,\r\n  speed: 500\r\n};\r\n\r\nexport const movieTvSliderSettings = {\r\n  infinite: true,\r\n  slidesToShow: 8,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1720,\r\n      settings: {\r\n        slidesToShow: 7\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1520,\r\n      settings: {\r\n        slidesToShow: 6\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 5\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1000,\r\n      settings: {\r\n        slidesToShow: 4\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 3\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings7 = {\r\n  infinite: true,\r\n  slidesToShow: 7,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1520,\r\n      settings: {\r\n        slidesToShow: 6\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 5\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1000,\r\n      settings: {\r\n        slidesToShow: 4\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 3\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nexport const movieTvSliderSettings6 = {\r\n  infinite: true,\r\n  slidesToShow: 6,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 5\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 1000,\r\n      settings: {\r\n        slidesToShow: 4\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 3\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings5 = {\r\n  infinite: true,\r\n  slidesToShow: 5,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1000,\r\n      settings: {\r\n        slidesToShow: 4\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 3\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings4 = {\r\n  infinite: true,\r\n  slidesToShow: 4,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 670,\r\n      settings: {\r\n        slidesToShow: 3\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings3 = {\r\n  infinite: true,\r\n  slidesToShow: 3,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings2 = {\r\n  infinite: true,\r\n  slidesToShow: 2,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 500,\r\n      settings: {\r\n        slidesToShow: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport const movieTvSliderSettings1 = {\r\n  infinite: true,\r\n  slidesToShow: 1,\r\n  arrows: true,\r\n  swipeToSlide: true,\r\n  speed: 500,\r\n  initialSlide: 0\r\n};","import React from 'react';\r\nimport ContentSlider from '../layout/ContentSlider';\r\nimport HomeSwitch from './HomeSwitch';\r\nimport {movieTvSliderSettings} from '../../utils/settings';\r\n\r\nimport './style/css/HomeContent.css';\r\n\r\nconst dispalySliders = (movies, genres) => {\r\n  return movies.map(movieSlider => {\r\n    return (\r\n      <section className=\"home_slider\" key={movieSlider.title}>\r\n        <h3 className=\"home_slider_name\">{movieSlider.title}</h3>\r\n        <section className=\"home_slider_container\">\r\n          <ContentSlider settings={movieTvSliderSettings} movies={movieSlider.movies} type={movieSlider.type} genres={genres} />\r\n        </section>\r\n      </section>\r\n    )\r\n  })\r\n}\r\n\r\nconst HomeContent = ({movies, genres}) => {\r\n  return (\r\n    <section className=\"home_movies\">\r\n      <HomeSwitch />\r\n      {dispalySliders(movies, genres)}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default HomeContent;","export const MOVIEDBAPI = '9aaea37e833c9bd0cee81fa22d51a538';\r\n\r\n","import * as actionTypes from '../actions/types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const fetchNowPlayingMovies = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${MOVIEDBAPI}&language=en-US&page=1`)\r\n    dispatch({\r\n      type: actionTypes.FETCH_NOW_PLAYING_MOVIES,\r\n      payload: {\r\n        nowPlayingMovies: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPopularMovies = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_POPULAR_MOVIES,\r\n      payload: {\r\n        popularMovies: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchUpcomingMovies = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_UPCOMING_MOVIES,\r\n      payload: {\r\n        upcomingMovies: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchTopRatedMovies = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_TOP_RATED_MOVIES,\r\n      payload: {\r\n        topRatedMovies: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchMovieGenres = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_MOVIE_GENRES,\r\n      payload: {\r\n        movieGenres: results.data.genres\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchMovie = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.GET_MOVIE,\r\n      payload: {\r\n        currentMovie: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchMovieCredits = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${MOVIEDBAPI}`);\r\n    dispatch({\r\n      type: actionTypes.GET_MOVIE_CREDITS,\r\n      payload: {\r\n        currentMoviesCredits: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchMovieReviews = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.GET_MOVIE_REVIEWS,\r\n      payload: {\r\n        currentMoviesReviews: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchMovieVideos = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.GET_MOVIE_VIDEOS,\r\n      payload: {\r\n        currentMoviesVideos: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchSimilarMovies = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.GET_SIMILAR_MOVIES,\r\n      payload: {\r\n        similarMovies: results.data.results\r\n      }\r\n    })\r\n  }\r\n}","import * as actionTypes from '../actions/types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const fetchOnTheAirShows = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/on_the_air?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_ON_THE_AIR_SHOWS,\r\n      payload: {\r\n        onTheAirShows: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPopularShows = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_POPULAR_SHOWS,\r\n      payload: {\r\n        popularShows: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchTopRatedShows = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_TOP_RATED_SHOWS,\r\n      payload: {\r\n        topRatedShows: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchOnTheAirTodayShows = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(` https://api.themoviedb.org/3/tv/airing_today?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_ON_THE_AIR_TODAY_SHOWS,\r\n      payload: {\r\n        onTheAirTodayShows: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShowGenres = () => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/genre/tv/list?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_SHOW_GENRES,\r\n      payload: {\r\n        showGenres: results.data.genres\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShow = id => {\r\n  return async (dispatch) => {\r\n    const result = await axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.GET_SHOW,\r\n      payload: {\r\n        currentShow: result.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShowCredits = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.GET_SHOW_CREDITS,\r\n      payload: {\r\n        currentShowCredits: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShowReviews = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.GET_SHOW_REVIEWS,\r\n      payload: {\r\n        currentShowReviews: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShowVideos = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.GET_SHOW_VIDEOS,\r\n      payload: {\r\n        currentShowVideos: results.data.results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchSimilarShows = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/tv/${id}/similar?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.GET_SIMILAR_SHOWS,\r\n      payload: {\r\n        similarShows: results.data.results\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport HomeDisplay from './Home/HomeDisplay';\nimport HomeContent from './Home/HomeContent';\nimport {fetchNowPlayingMovies, fetchTopRatedMovies, fetchPopularMovies, fetchUpcomingMovies, fetchMovieGenres} from '../actions/movieActions';\nimport {fetchOnTheAirShows, fetchTopRatedShows, fetchPopularShows, fetchOnTheAirTodayShows, fetchShowGenres} from '../actions/tvShowActions';\n\nimport './App.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nclass App extends React.Component {\n  state = {\n    fetchType: 'movies'\n  }\n\n  componentDidMount() {\n    this.props.fetchTopRatedMovies();\n    this.props.fetchNowPlayingMovies();\n    this.props.fetchUpcomingMovies();\n    this.props.fetchPopularMovies();\n    this.props.fetchMovieGenres();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.shouldComponentFetchShows(this.props.type, prevProps.type, this.props.topRatedShows)) {\n      this.props.fetchTopRatedShows();\n      this.props.fetchOnTheAirShows();\n      this.props.fetchPopularShows();\n      this.props.fetchOnTheAirTodayShows();\n      this.props.fetchShowGenres();\n    }\n  }\n\n  shouldComponentFetchShows = (newType, oldType, showArray) => {\n    return newType !== oldType && newType === 'shows' && showArray.length === 0;\n  }\n\n  homeDisplayMovies = fetchType => fetchType === 'movies' ? this.props.topRatedMovies : this.props.topRatedShows;\n\n  getGenres = fetchType => fetchType === 'movies' ? this.props.movieGenres : this.props.showGenres;\n\n  getContentMovies = (fetchType) => {\n    let movies = [];\n    if (fetchType === 'movies') {\n      movies = [\n        {type: fetchType, title: 'Now Playing', movies: this.props.nowPlayingMovies},\n        {type: fetchType, title: 'Popular', movies: this.props.popularMovies},\n        {type: fetchType, title: 'Upcoming', movies: this.props.upcomingMovies}\n      ]\n    } else {\n      movies = [\n        {type: fetchType, title: 'On The Air Today', movies: this.props.onTheAirTodayShows},\n        {type: fetchType, title: 'On The Air', movies: this.props.onTheAirShows},\n        {type: fetchType, title: 'Popular', movies: this.props.popularShows}\n      ]\n    }\n    return movies;\n  }\n\n  render() {\n    const {type} = this.props;\n    const displayMovies = this.homeDisplayMovies(type);\n    const contentMovies = this.getContentMovies(type);\n    const genres = this.getGenres(type);\n    return (\n      <section className=\"App\">\n        <HomeDisplay movies={displayMovies} genres={genres} fetchType={type} />\n        <HomeContent movies={contentMovies} genres={genres}/>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    topRatedMovies: state.movies.topRatedMovies,\n    popularMovies: state.movies.popularMovies,\n    upcomingMovies: state.movies.upcomingMovies,\n    nowPlayingMovies: state.movies.nowPlayingMovies,\n    movieGenres: state.movies.movieGenres,\n    topRatedShows: state.shows.topRatedShows,\n    onTheAirShows: state.shows.onTheAirShows,\n    onTheAirTodayShows: state.shows.onTheAirTodayShows,\n    popularShows: state.shows.popularShows,\n    showGenres: state.shows.showGenres,\n    type: state.settings.type\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchNowPlayingMovies: () => dispatch(fetchNowPlayingMovies()),\n    fetchTopRatedMovies: () => dispatch(fetchTopRatedMovies()),\n    fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n    fetchUpcomingMovies: () => dispatch(fetchUpcomingMovies()),\n    fetchOnTheAirShows: () => dispatch(fetchOnTheAirShows()),\n    fetchTopRatedShows: () => dispatch(fetchTopRatedShows()),\n    fetchPopularShows: () => dispatch(fetchPopularShows()),\n    fetchOnTheAirTodayShows: () => dispatch(fetchOnTheAirTodayShows()),\n    fetchMovieGenres: () => dispatch(fetchMovieGenres()),\n    fetchShowGenres: () => dispatch(fetchShowGenres())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from '../actions/types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const getToken = () => {\r\n  return async (dispatch) => {\r\n    const response = await axios.get(`https://api.themoviedb.org/3/authentication/token/new?api_key=${MOVIEDBAPI}`);\r\n    dispatch({\r\n      type: actionTypes.GET_TOKEN,\r\n      payload: {\r\n        token_id: response.data.request_token\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const getSession = (token) => {\r\n  return async (dispatch) => {\r\n    axios.post(`https://api.themoviedb.org/3/authentication/session/new?api_key=${MOVIEDBAPI}`, {\r\n       request_token: token\r\n    }).then((response) => {\r\n      localStorage.setItem('session_id', response.data.session_id);\r\n      dispatch({\r\n        type: actionTypes.GET_SESSION,\r\n        payload: {\r\n          session_id: response.data.session_id\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const setSession = session_id => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SET_SESSION,\r\n      payload: {\r\n        session_id: session_id\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const setToken = token_id => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SET_TOKEN,\r\n      payload: {\r\n        token_id: token_id\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear()\r\n    dispatch({\r\n      type: actionTypes.LOGOUT,\r\n      payload: {\r\n        token_id: null,\r\n        session_id: null,\r\n        account: null\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getToken} from '../../actions/authActions';\r\n\r\nimport '../App.css';\r\nimport './style/css/Login.css';\r\n\r\nclass Login extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getToken();\r\n  }\r\n\r\n  onLoginClick = url => this.props.getSession(url);\r\n\r\n  render() {\r\n    const loginHref = `https://www.themoviedb.org/authenticate/${this.props.token_id}?redirect_to=https://miguelgarcia95.github.io/movie-searchbase/account/approved`;\r\n    return (\r\n      <section className='login_page'>\r\n        <section className=\"login_content\">\r\n          <section className=\"login_header\"><h1>Login</h1></section>\r\n          <section className=\"login_buttons\">\r\n            <section className=\"login_button\"><a href={loginHref} >Login</a></section>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token_id: state.auth.token_id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getToken: () => dispatch(getToken())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import * as actionTypes from '../actions/types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const getAccount = session_id => {\r\n  return async (dispatch) => {\r\n    const response = await axios.get(`https://api.themoviedb.org/3/account?api_key=${MOVIEDBAPI}&session_id=${session_id}`);\r\n    localStorage.setItem('account', JSON.stringify(response.data));\r\n    dispatch({\r\n      type: actionTypes.GET_ACCOUNT,\r\n      payload: {\r\n        account: response.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const setAccount = account => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SET_ACCOUNT,\r\n      payload: {\r\n        account: account\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const getFavoriteShows = (accountId, sessionId) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/favorite/tv?api_key=${MOVIEDBAPI}&language=en-US&session_id=${sessionId}&sort_by=created_at.asc&page=1`;\r\n    const response = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.GET_FAVORITE_SHOWS,\r\n      payload: {\r\n        favoriteShows: response.data.results,\r\n        favoriteShowsTotalResults: response.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const getFavoriteMovies = (accountId, sessionId) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/favorite/movies?api_key=${MOVIEDBAPI}&language=en-US&session_id=${sessionId}&sort_by=created_at.asc&page=1`;\r\n    const response = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.GET_FAVORITE_MOVIES,\r\n      payload: {\r\n        favoriteMovies: response.data.results,\r\n        favoriteMoviesTotalResults: response.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const getShowWatchlist = (accountId, sessionId) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/watchlist/tv?api_key=${MOVIEDBAPI}&language=en-US&session_id=${sessionId}&sort_by=created_at.asc&page=1`;\r\n    const response = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.GET_SHOW_WATCHLIST,\r\n      payload: {\r\n        showWatchlist: response.data.results,\r\n        showWatchlistTotalResults: response.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const getMovieWatchlist = (accountId, sessionId) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/watchlist/movies?api_key=${MOVIEDBAPI}&language=en-US&session_id=${sessionId}&sort_by=created_at.asc&page=1`;\r\n    const response = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.GET_MOVIE_WATCHLIST,\r\n      payload: {\r\n        movieWatchlist: response.data.results,\r\n        movieWatchlistTotalResults: response.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const addToFavorites = (accountId, sessionId, mediaType, mediaId) => {\r\n  return (dispatch) => {\r\n    let type = mediaType === 'movies' ? 'movie' : 'tv';\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/favorite?api_key=${MOVIEDBAPI}&session_id=${sessionId}`;\r\n    axios.post(url, {\r\n      media_type: type,\r\n      media_id: mediaId,\r\n      favorite: true\r\n    }).then(response => {\r\n      dispatch({\r\n        type: actionTypes.ADD_TO_FAVORITES,\r\n        payload: {\r\n          message: 'Was Added To Favorites!'\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\nexport const removeFromFavorites = (accountId, sessionId, mediaType, mediaId) => {\r\n  return (dispatch) => {\r\n    let type = mediaType === 'movies' ? 'movie' : 'tv';\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/favorite?api_key=${MOVIEDBAPI}&session_id=${sessionId}`;\r\n    axios.post(url, {\r\n      media_type: type,\r\n      media_id: mediaId,\r\n      favorite: false\r\n    }).then(response => {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_FROM_FAVORITES,\r\n        payload: {\r\n          message: 'Was Removed From Favorites!',\r\n          removedId: mediaId,\r\n          type: mediaType\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const addToWatchlist = (accountId, sessionId, mediaType, mediaId) => {\r\n  return (dispatch) => {\r\n    let type = mediaType === 'movies' ? 'movie' : 'tv';\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/watchlist?api_key=${MOVIEDBAPI}&session_id=${sessionId}`;\r\n    axios.post(url, {\r\n      media_type: type,\r\n      media_id: mediaId,\r\n      watchlist: true\r\n    }).then(response => {\r\n      dispatch({\r\n        type: actionTypes.ADD_TO_WATCHLIST,\r\n        payload: {\r\n          message: 'Was Added To Watchlist!'\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeFromWatchlist = (accountId, sessionId, mediaType, mediaId) => {\r\n  return (dispatch) => {\r\n    let type = mediaType === 'movies' ? 'movie' : 'tv';\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/watchlist?api_key=${MOVIEDBAPI}&session_id=${sessionId}`;\r\n    axios.post(url, {\r\n      media_type: type,\r\n      media_id: mediaId,\r\n      watchlist: false\r\n    }).then(response => {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_FROM_WATCHLIST,\r\n        payload: {\r\n          message: 'Was Removed From Watchlist!',\r\n          removedId: mediaId,\r\n          type: mediaType\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteMessage = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.DELETE_MESSAGE,\r\n      payload: {\r\n        message: null\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst UserPanel = ({account}) => {\r\n  return (\r\n    <section className=\"user_panel\">\r\n      <section className=\"user_avatar\"><img src={`https://gravatar.com/avatar/${account.avatar.gravatar.hash}?d=identicon`} alt={`${account.username} avatar`} /></section>\r\n      <section className=\"user_name\"><h1>{account.username}</h1></section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default UserPanel;","import React from 'react';\r\n\r\nconst SidepanelPanel = ({title, count}) => {\r\n  return (\r\n    <section className=\"content_panel\">\r\n      <section className=\"panel_info\">\r\n        <h2 className=\"count\">{count}</h2>\r\n        <h2 className=\"category\">{title}</h2>\r\n      </section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default SidepanelPanel;","import React from 'react';\r\nimport './style/css/AccountSlide.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTitle, getYear, getGenre} from '../../utils/functions';\r\nimport './style/css/AccountSlide.css';\r\n\r\nconst AccountSlide = ({movie, type, genres, sliderType, removeFromList, sessionId, accountId}) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n  }\r\n  return (\r\n    <section className=\"account_slide\">\r\n      <section className=\"account_movie\">\r\n        <section className=\"account_movie_image\" style={imageStyle}></section>\r\n        <p className=\"account_movie_image_rating\">{movie.vote_average}</p>  \r\n        <Link to={`/${type}/${movie.id}`}>\r\n          <p className=\"account_movie_image_link\" ><i className=\"fas fa-expand-arrows-alt \"></i></p>  \r\n        </Link>\r\n        <p className=\"account_movie_image_remove\" title={`Remove From ${sliderType} list`} onClick={() => removeFromList(accountId, sessionId, type, movie.id)}>\r\n          <i className=\"fas fa-times fa-lg\"></i>\r\n        </p>  \r\n      </section>\r\n\r\n      <section className=\"account_movie_data\">\r\n          <section className=\"account_movie_meta\"><p>{getYear(movie, type)} / {getGenre(movie, genres)}</p></section>  \r\n          <section className=\"account_movie_title\"><p>{getTitle(movie, type)}</p></section>  \r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AccountSlide;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport AccountSlide from './AccountSlide';\r\n\r\nconst displayMovies = (movies, type, genres, sliderType, sessionId, accountId, removeFromList) => {\r\n  return movies.map(movie => {\r\n    return (\r\n      <AccountSlide \r\n        type={type} \r\n        movie={movie} \r\n        key={movie.id} \r\n        genres={genres} \r\n        sessionId={sessionId} \r\n        accountId={accountId} \r\n        sliderType={sliderType} \r\n        removeFromList={removeFromList} \r\n      />\r\n    )\r\n  })\r\n}\r\n\r\nconst getSlidesToShow = (movies, width) => {\r\n  if (!width) {\r\n    if (movies.length >= 4) {\r\n      return 4;\r\n    } else if (movies.length < 4) {\r\n      return movies.length;\r\n    }\r\n  } else if (width === 1080) {\r\n    if (movies.length >= 3) {\r\n      return 3;\r\n    } else if (movies.length < 3) {\r\n      return movies.length;\r\n    }\r\n  } else if (width === 700) {\r\n    if (movies.length >= 2) {\r\n      return 2;\r\n    } else if (movies.length < 2) {\r\n      return movies.length;\r\n    }\r\n  } else if (width === 530) {\r\n    return 1;\r\n  }\r\n}\r\n\r\nconst AccountSlider = ({movies, totalResults, sliderName, type, genres, sliderType, removeFromList, sessionId, accountId}) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: getSlidesToShow(movies),\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1080,\r\n        settings: {\r\n          slidesToShow: getSlidesToShow(movies, 1080)\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 700,\r\n        settings: {\r\n          slidesToShow: getSlidesToShow(movies, 700)\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 530,\r\n        settings: {\r\n          slidesToShow: getSlidesToShow(movies, 530)\r\n        }\r\n      },\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <section className=\"account_content_section\">\r\n      <section className=\"account_content_name\">\r\n        <h2>{sliderName} (<span className='slider_count'>{totalResults}</span>) <span className='slider_count_text'>20 max</span></h2>\r\n      </section>\r\n      <section className=\"account_content_slider\">\r\n        <Slider {...settings}>\r\n          {displayMovies(movies, type, genres, sliderType, sessionId, accountId, removeFromList)}\r\n        </Slider>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AccountSlider;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Link} from 'react-router-dom';\r\n\r\nimport {getSession, setSession, setToken} from '../../actions/authActions';\r\nimport {\r\n  getAccount, setAccount, getFavoriteMovies, getFavoriteShows, getMovieWatchlist, \r\n  getShowWatchlist, removeFromFavorites, removeFromWatchlist, deleteMessage\r\n} from '../../actions/accountActions';\r\nimport {fetchMovieGenres} from '../../actions/movieActions';\r\nimport {fetchShowGenres} from '../../actions/tvShowActions';\r\n\r\nimport UserPanel from './UserPanel';\r\nimport SidepanelPanel from './SidepanelPanel';\r\nimport AccountSlider from './AccountSlider';\r\n\r\nimport '../App.css';\r\nimport './style/css/Account.css';\r\n\r\n\r\nclass Account extends React.Component {\r\n  state = {\r\n    fetchedAccountData: false,\r\n    displayMessage: false\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const path = this.props.location.search;\r\n    if (this.getApproved(path)) {\r\n      this.props.getSession(this.getRequestToken(path))\r\n      this.props.setToken(this.getRequestToken(path))\r\n    } else if (localStorage.getItem('account')) {\r\n      this.props.setAccount(JSON.parse(localStorage.getItem('account')));\r\n    }\r\n    this.props.fetchMovieGenres();\r\n    this.props.fetchShowGenres();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.session_id && !localStorage.getItem('account') && !this.props.account) {\r\n      this.props.getAccount(this.props.session_id)\r\n    } else if (this.props.session_id  && localStorage.getItem('account') && !this.props.account) {\r\n      this.props.setAccount(JSON.parse(localStorage.getItem('account')))\r\n    } else if (!this.state.fetchedAccountData && this.props.account) {\r\n      this.setState({fetchedAccountData: true});\r\n      this.setAccountDetails(this.props.account.id, this.props.session_id);\r\n    }\r\n\r\n    if (this.props.message !== prevProps.message && this.props.message) {\r\n      this.setState({displayMessage: true});\r\n      setTimeout( () => {\r\n        this.setState({displayMessage: false})\r\n        this.props.deleteMessage();\r\n      }, 5000);\r\n    }\r\n  }\r\n  \r\n  setAccountDetails = (accountId, sessionId) => {\r\n    this.props.getFavoriteMovies(accountId, sessionId);\r\n    this.props.getFavoriteShows(accountId, sessionId);\r\n    this.props.getMovieWatchlist(accountId, sessionId);\r\n    this.props.getShowWatchlist(accountId, sessionId);\r\n  }\r\n\r\n  shouldRedirectToLogin = () => {\r\n    let redirect = false;\r\n    if (!this.props.location.search) {\r\n      if (!localStorage.getItem('session_id') && !localStorage.getItem('account')) {\r\n        redirect = true;\r\n      }\r\n    }\r\n    return redirect;\r\n  }\r\n\r\n  shouldRedirectToAccount = () => {\r\n    let redirect = false;\r\n    if (this.getApproved(this.props.location.search)) {\r\n      if (this.props.account) {\r\n        redirect = true;\r\n      }\r\n    }\r\n    return redirect;\r\n  }\r\n\r\n  getApproved = path => {\r\n    if (path) {\r\n      const approvedPath = path.match(new RegExp('&approved=(.*)'));\r\n      return approvedPath.length > 1 ? approvedPath[1] : null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getRequestToken = path => {\r\n    const tokenPath = path.match(new RegExp('request_token=(.*)&'));\r\n    return tokenPath.length > 1 ? tokenPath[1] : null;\r\n  }\r\n\r\n  render() {\r\n    const redirectToAccount = this.shouldRedirectToAccount();\r\n    const redirectToLogin = this.shouldRedirectToLogin();\r\n    const {displayMessage} = this.state;\r\n    const {account, showGenres, movieGenres, removeFromFavorites, removeFromWatchlist, session_id, message} = this.props;\r\n    const {favoriteMovies, favoriteMoviesTotalResults} = this.props;\r\n    const {favoriteShows, favoriteShowsTotalResults} = this.props;\r\n    const {movieWatchlist, movieWatchlistTotalResults} = this.props;\r\n    const {showWatchlist, showWatchlistTotalResults} = this.props;    \r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section className={`message_popup ${displayMessage ? 'active' : ''}`}>\r\n          {message && <h2 className=\"message\">{message}</h2> }\r\n        </section>\r\n        <section className=\"account_page\">\r\n          {redirectToLogin && <Redirect to='/login'/>}\r\n          {redirectToAccount && <Redirect to='/account'/>}\r\n          {account ? (\r\n            <React.Fragment>\r\n              <section className=\"account_sidepanel\">\r\n                <UserPanel account={account} />\r\n                <SidepanelPanel count={favoriteMoviesTotalResults} title='Favorite Movies' />\r\n                <SidepanelPanel count={favoriteShowsTotalResults} title='Favorite Tv Shows' />\r\n                <SidepanelPanel count={movieWatchlistTotalResults} title='Movie Watchlist' />\r\n                <SidepanelPanel count={showWatchlistTotalResults} title='Show Watchlist' />\r\n              </section>\r\n              <section className=\"account_content\">\r\n                <AccountSlider \r\n                  sliderName='Favorite Movies' \r\n                  movies={favoriteMovies} \r\n                  totalResults={favoriteMovies.length}\r\n                  type='movies'\r\n                  sliderType='Favorite'\r\n                  genres={movieGenres}\r\n                  removeFromList={removeFromFavorites}\r\n                  sessionId={session_id}\r\n                  accountId={account.id}\r\n                />\r\n                <AccountSlider \r\n                  sliderName='Favorite Tv Shows' \r\n                  movies={favoriteShows} \r\n                  totalResults={favoriteShows.length} \r\n                  type='shows'\r\n                  genres={showGenres}\r\n                  sliderType='Favorite'\r\n                  removeFromList={removeFromFavorites}\r\n                  sessionId={session_id}\r\n                  accountId={account.id}\r\n                />\r\n                <AccountSlider \r\n                  sliderName='Movie Watchlist' \r\n                  movies={movieWatchlist}\r\n                  totalResults={movieWatchlist.length}\r\n                  type='movies'\r\n                  genres={movieGenres}\r\n                  sliderType='Watchlist'\r\n                  removeFromList={removeFromWatchlist}\r\n                  sessionId={session_id}\r\n                  accountId={account.id}\r\n                />\r\n                <AccountSlider \r\n                  sliderName='Show Watchlist' \r\n                  movies={showWatchlist} \r\n                  totalResults={showWatchlist.length} \r\n                  type='shows'\r\n                  genres={showGenres}\r\n                  sliderType='Watchlist'\r\n                  removeFromList={removeFromWatchlist}\r\n                  sessionId={session_id}\r\n                  accountId={account.id}\r\n                />\r\n              </section>\r\n\r\n            </React.Fragment>\r\n          ) : (<Link to='account' className='tryagain'>Try Again</Link>)}\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id,\r\n    token_id: state.auth.token_id,\r\n    account: state.account.account,\r\n    favoriteMovies: state.account.favoriteMovies,\r\n    favoriteMoviesTotalResults: state.account.favoriteMoviesTotalResults,\r\n    favoriteShows: state.account.favoriteShows,\r\n    favoriteShowsTotalResults: state.account.favoriteShowsTotalResults,\r\n    movieWatchlist: state.account.movieWatchlist,\r\n    movieWatchlistTotalResults: state.account.movieWatchlistTotalResults,\r\n    showWatchlist: state.account.showWatchlist,\r\n    showWatchlistTotalResults: state.account.showWatchlistTotalResults,\r\n    movieGenres: state.movies.movieGenres,\r\n    showGenres: state.shows.showGenres,\r\n    message: state.account.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSession: token => dispatch(getSession(token)),\r\n    setSession: tokenId => dispatch(setSession(tokenId)),\r\n    getAccount: session_id => dispatch(getAccount(session_id)),\r\n    setAccount: account => dispatch(setAccount(account)),\r\n    setToken: token => dispatch(setToken(token)),\r\n    getFavoriteMovies: (accountId, sessionId) => dispatch(getFavoriteMovies(accountId, sessionId)),\r\n    getFavoriteShows: (accountId, sessionId) => dispatch(getFavoriteShows(accountId, sessionId)),\r\n    getMovieWatchlist: (accountId, sessionId) => dispatch(getMovieWatchlist(accountId, sessionId)),\r\n    getShowWatchlist: (accountId, sessionId) => dispatch(getShowWatchlist(accountId, sessionId)),\r\n    removeFromFavorites: (accountId, sessionId, mediaType, mediaId, action) => dispatch(removeFromFavorites(accountId, sessionId, mediaType, mediaId, action)),\r\n    removeFromWatchlist: (accountId, sessionId, mediaType, mediaId, action) => dispatch(removeFromWatchlist(accountId, sessionId, mediaType, mediaId, action)),\r\n    fetchMovieGenres: () => dispatch(fetchMovieGenres()),\r\n    fetchShowGenres: () => dispatch(fetchShowGenres()),\r\n    deleteMessage: () => dispatch(deleteMessage())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);\r\n","import * as actionTypes from './types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const fetchMoviesSearch = (searchQuery, page) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${MOVIEDBAPI}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`;\r\n    const results = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.SEARCH_MOVIE_RESULTS,\r\n      payload: {\r\n        moviesSearchResults: results.data.results,\r\n        moviesCurrentPage: results.data.page,\r\n        moviesTotalPages: results.data.total_pages,\r\n        moviesTotalResults: results.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchShowsSearch = (searchQuery, page) => {\r\n  return async (dispatch) => {\r\n    const url = `https://api.themoviedb.org/3/search/tv?api_key=${MOVIEDBAPI}&language=en-US&query=${searchQuery}&page=${page}`;\r\n    const results = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.SEARCH_SHOW_RESULTS,\r\n      payload: {\r\n        showsSearchResults: results.data.results,\r\n        showsCurrentPage: results.data.page,\r\n        showsTotalPages: results.data.total_pages,\r\n        showsTotalResults: results.data.total_results\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetResults = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.RESET_RESULTS,\r\n      payload: {\r\n        searchResults: [],\r\n        currentPage: null,\r\n        totalPages: null,\r\n        totalResults: null\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './style/css/MovieResult.css';\r\nimport {getTitle, getYear, getGenre, getPoster} from '../../utils/functions';\r\n\r\nconst MovieResult = ({movie, type, genres}) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(${getPoster(movie)})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n  }\r\n\r\n  return (\r\n    <Link to={`/${type}/${movie.id}`}>\r\n      <section className=\"search_result\">\r\n        <section className=\"search_result_movie\">\r\n          <section className=\"search_result_movie_image\" style={imageStyle}></section>\r\n          <p className=\"search_result_movie_rating\">{movie.vote_average.toFixed(1)}</p>  \r\n        </section>\r\n        <section className=\"search_result_movie_data\">\r\n            <section className=\"search_result_movie_meta\"><p>{getYear(movie, type)} / {getGenre(movie, genres)}</p></section>  \r\n            <section className=\"search_result_movie_title\"><p>{getTitle(movie, type)}</p></section>  \r\n        </section>\r\n      </section>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default MovieResult;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './style/css/ResultSwitch.css';\r\nimport {setType} from '../../actions/settingsActions';\r\n\r\nconst isFetchMovies = fetchType => fetchType === 'movies' ? 'active' : ''; \r\nconst isFetchShows = fetchType => fetchType === 'shows' ? 'active' : ''; \r\n\r\nconst ResultSwitch = ({type, setType}) => {\r\n  return (\r\n    <section className=\"result_switch_container\">\r\n      <section className=\"result_switch\">\r\n        <section className={`result_switch_select ${isFetchMovies(type)}`}>\r\n          <p className=\"result_switch_select_content\" onClick={() => setType('movies')}>Movies</p>\r\n          <section className=\"result_switch_select_color\"></section>\r\n        </section>\r\n        <section className={`result_switch_select ${isFetchShows(type)}`}>\r\n          <p className=\"result_switch_select_content\" onClick={() => setType('shows')}>Shows</p>\r\n          <section className=\"result_switch_select_color\"></section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    type: state.settings.type\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setType: type => dispatch(setType(type))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultSwitch);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchMoviesSearch, fetchShowsSearch} from '../../actions/searchActions';\r\n\r\nimport './style/css/Pagination.css';\r\n\r\nclass Pagination extends React.Component {\r\n  isTypeMovie = () => this.props.type === 'movies' ? true : false;\r\n\r\n  isDisabledClass = status => status ? 'disabled' : '';\r\n\r\n  getLastPage = () => this.isTypeMovie() ? this.props.moviesTotalPages : this.props.showsTotalPages;\r\n  getCurrentPage = () => this.isTypeMovie() ? this.props.moviesCurrentPage : this.props.showsCurrentPage;\r\n\r\n  isPrevPaginationDisabled = type => {\r\n    let isDisabled = false;\r\n    if (type === 'movies' && this.props.moviesCurrentPage === 1) {\r\n      isDisabled = true;\r\n    } else if (type === 'shows' && this.props.showsCurrentPage === 1) {\r\n      isDisabled = true;\r\n    }\r\n    return isDisabled;\r\n  }\r\n\r\n  isNextPaginationDisabled = type => {\r\n    let isDisabled = false;\r\n    if (type === 'movies' && this.props.moviesCurrentPage >= this.props.moviesTotalPages) {\r\n      isDisabled = true;\r\n    } else if (type === 'shows' && this.props.showsCurrentPage >= this.props.showsTotalPages) {\r\n      isDisabled = true;\r\n    }\r\n    return isDisabled;\r\n  }\r\n\r\n  updateResults = direction => {\r\n    let moviePage = this.updatePage(this.props.moviesCurrentPage, direction);\r\n    let showPage = this.updatePage(this.props.showsCurrentPage, direction)\r\n\r\n    if (this.isTypeMovie()) {\r\n      this.props.fetchMoviesSearch(this.props.searchQuery, moviePage);\r\n    } else {\r\n      this.props.fetchShowsSearch(this.props.searchQuery, showPage);\r\n    }\r\n  }\r\n\r\n  updatePage = (currentPage, direction) => direction === 'prev' ? currentPage - 1 : currentPage + 1; \r\n\r\n  goToPage = page => {\r\n    if (this.isTypeMovie()) {\r\n      this.props.fetchMoviesSearch(this.props.searchQuery, page)\r\n    } else {\r\n      this.props.fetchShowsSearch(this.props.searchQuery, page);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {type} = this.props;\r\n\r\n    const prevPaginationStatus = this.isPrevPaginationDisabled(type);\r\n    const nextPaginationStatus = this.isNextPaginationDisabled(type);\r\n    const prevPaginationStatusClass = this.isDisabledClass(prevPaginationStatus);\r\n    const nextPaginationStatusClass = this.isDisabledClass(nextPaginationStatus);\r\n\r\n    return (\r\n      <section className=\"pagination\">\r\n        <section className='pagination_left' >\r\n          <section className={`pagination_button ${prevPaginationStatusClass}`}>\r\n            {prevPaginationStatus &&  <i className=\"fas fa-3x fa-arrow-left\"></i>}\r\n            {!prevPaginationStatus &&  <i className=\"fas fa-3x fa-arrow-left\" onClick={() => this.updateResults('prev')}></i>}\r\n          </section>\r\n        </section>\r\n        <section className=\"pagination_center\">\r\n          <section className=\"first_page page\"><p onClick={() => this.goToPage(1)}>1</p></section>\r\n          <section className=\"last_page page\"><p onClick={() => this.goToPage(this.getLastPage())} >{this.getLastPage()}</p></section>\r\n          <section className=\"current_page page\"><p>{this.getCurrentPage()}</p></section>\r\n        </section>\r\n        <section className='pagination_right' >\r\n          <section className={`pagination_button ${nextPaginationStatusClass}`}>\r\n            {nextPaginationStatus && <i className=\"fas fa-3x fa-arrow-right\"></i>}\r\n            {!nextPaginationStatus && <i className=\"fas fa-3x fa-arrow-right\" onClick={() => this.updateResults('next')}></i>}\r\n          </section>\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moviesCurrentPage: state.results.moviesCurrentPage,\r\n    moviesTotalPages: state.results.moviesTotalPages,\r\n    moviesTotalResults: state.results.moviesTotalResults,\r\n    type: state.settings.type,\r\n    showsCurrentPage: state.results.showsCurrentPage,\r\n    showsTotalPages: state.results.showsTotalPages,\r\n    showsTotalResults: state.results.showsTotalResults\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchMoviesSearch: (searchQuery, page) => dispatch(fetchMoviesSearch(searchQuery, page)),\r\n    fetchShowsSearch: (searchQuery, page) => dispatch(fetchShowsSearch(searchQuery, page))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {fetchMoviesSearch, fetchShowsSearch} from '../../actions/searchActions';\r\nimport {fetchMovieGenres} from '../../actions/movieActions';\r\nimport {fetchShowGenres} from '../../actions/tvShowActions';\r\nimport MovieResult from './MovieResult';\r\nimport ResultSwitch from './ResultSwitch';\r\nimport '../App.css';\r\nimport './style/css/SearchResults.css';\r\nimport Pagination from './Pagination';\r\n\r\nclass SearchResults extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.type === 'movies') {\r\n      this.fetchMovies(1);\r\n    } else {\r\n      this.fetchShows(1);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.type !== prevProps.type && this.props.type === 'shows' && this.props.showsSearchResults.length === 0) {\r\n      this.fetchShows(1);\r\n    } else if (this.props.match.params.searchQuery !== prevProps.match.params.searchQuery) {\r\n      if (this.isTypeMovie()) {\r\n        this.fetchMovies(1);\r\n      } else {\r\n        this.fetchShows(1);\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchMovies = page => {\r\n    this.props.fetchMoviesSearch(this.props.match.params.searchQuery, page);\r\n    this.props.fetchMovieGenres();\r\n  }\r\n\r\n  fetchShows = page => {\r\n    this.props.fetchShowsSearch(this.props.match.params.searchQuery, page);\r\n    this.props.fetchShowGenres();\r\n  }\r\n\r\n  displayResults = (movies, type, genres) => {\r\n    return movies.map(movie => {\r\n      return <MovieResult key={movie.id} movie={movie} type={type} genres={genres}/>\r\n    })\r\n  }\r\n\r\n  getSearchResults = () => this.isTypeMovie() ? this.props.moviesSearchResults : this.props.showsSearchResults;\r\n\r\n  getGenres = () => this.isTypeMovie() ? this.props.movieGenres : this.props.showGenres;\r\n\r\n  isTypeMovie = () => this.props.type === 'movies' ? true : false;\r\n\r\n  isDisabledClass = status => status ? 'disabled' : '';\r\n\r\n  render() {\r\n    const {type} = this.props;\r\n    const genres = this.getGenres(type);\r\n    const searchResults = this.getSearchResults();\r\n\r\n    return (\r\n      <section className=\"search_page\">\r\n        <section className=\"search_data\">\r\n          <h1>Search Results For: <span>{this.props.match.params.searchQuery}</span></h1>\r\n        </section>\r\n        <section className=\"results\">\r\n          <p>Results: {searchResults.length}</p>\r\n          <ResultSwitch />\r\n        </section>\r\n\r\n        <section className=\"search_results\">\r\n          {this.displayResults(searchResults, type, genres)}\r\n        </section>\r\n\r\n        <Pagination searchQuery={this.props.match.params.searchQuery} />\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    type: state.settings.type,\r\n    moviesSearchResults: state.results.moviesSearchResults,\r\n    showsSearchResults: state.results.showsSearchResults,\r\n    movieGenres: state.movies.movieGenres,\r\n    showGenres: state.shows.showGenres\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchMoviesSearch: (searchQuery, page) => dispatch(fetchMoviesSearch(searchQuery, page)),\r\n    fetchShowsSearch: (searchQuery, page) => dispatch(fetchShowsSearch(searchQuery, page)),\r\n    fetchMovieGenres: () => dispatch(fetchMovieGenres()),\r\n    fetchShowGenres: () => dispatch(fetchShowGenres())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\r\n","import React from 'react';\r\n\r\nconst FavoriteCircle = ({movie, type, addToFavorites, account, sessionId}) => {\r\n  return (\r\n    <section className=\"favorite_circle circle\" title='Add To Favorites' onClick={() => addToFavorites(account.id, sessionId, type, movie.id)} >\r\n      <i className=\"fas fa-heart fa-2x\" ></i>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FavoriteCircle;","import React from 'react';\r\n\r\nconst WatchCircle = ({movie, type, addToWatchlist, account, sessionId}) => {\r\n  return (\r\n    <section className=\"watch_circle circle\" title='Add To Watchlist' onClick={() => addToWatchlist(account.id, sessionId, type, movie.id)} >\r\n      <i className=\"fas fa-eye fa-2x\"></i>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default WatchCircle;","import React from 'react';\r\n\r\nconst RatingCircle = ({rating}) => {\r\n  return (\r\n    <section title='rating' className=\"rating_circle circle\">\r\n      <section className=\"outer_circle circle\">\r\n        <section className=\"inner_circle circle\">\r\n          <h2>{rating}</h2>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RatingCircle;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addToFavorites, addToWatchlist} from '../../actions/accountActions';\r\nimport {getTitle, getPoster, getImage} from '../../utils/functions';\r\nimport FavoriteCircle from './FavoriteCircle';\r\nimport WatchCircle from './WatchCircle';\r\nimport RatingCircle from './RatingCircle';\r\n\r\nconst displayGenres = (genres) => {\r\n  return genres.map(genre => {\r\n    return <span key={genre.id} className=\"genre\">{genre.name}</span>\r\n  })\r\n}\r\n\r\nconst DisplayHeader = ({currentMovie, type, addToFavorites, addToWatchlist, account, session_id}) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(${getImage(currentMovie)})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed'\r\n  };\r\n\r\n  return (\r\n    <section className=\"display_movie_header\">\r\n      <section className=\"display_movie_header_image\" style={imageStyle}></section>\r\n      {account && <FavoriteCircle addToFavorites={addToFavorites} type={type} account={account} sessionId={session_id} movie={currentMovie} /> }\r\n      {account && <WatchCircle addToWatchlist={addToWatchlist} type={type} account={account} sessionId={session_id} movie={currentMovie} /> }\r\n      <section className=\"display_movie_header_content\">\r\n        <section className=\"display_movie_header_background\">\r\n          <section className=\"top\"></section>\r\n          <section className=\"bottom\"></section>\r\n        </section>\r\n        <section className=\"display_header_data\">\r\n          <section className=\"display_poster\">\r\n            <RatingCircle rating={currentMovie.vote_average} />\r\n            <section className=\"display_poster_image\"><img src={getPoster(currentMovie)} /></section>\r\n          </section>\r\n          <section className=\"title_meta\">\r\n            <h1 className=\"title\">{getTitle(currentMovie, type)}</h1>\r\n            <p className=\"meta\">{displayGenres(currentMovie.genres)}</p>\r\n          </section>\r\n          <section className=\"display_header_content normal\">\r\n            <p className=\"description\">{currentMovie.overview}</p>\r\n          </section>\r\n          <section className=\"display_header_content mobile mobile_one\">\r\n            <p className=\"description\"> {currentMovie.overview.substring(0, 1190)} {currentMovie.overview.length > 1190 && ' ...'}</p>\r\n          </section>\r\n          <section className=\"display_header_content mobile mobile_two\">\r\n            <p className=\"description\"> {currentMovie.overview.substring(0, 700)} {currentMovie.overview.length > 700 && ' ...'}</p>\r\n          </section>\r\n          <section className=\"display_header_content mobile mobile_three\">\r\n            <p className=\"description\"> {currentMovie.overview.substring(0, 480)} {currentMovie.overview.length > 480 && ' ...'}</p>\r\n          </section>\r\n          <section className=\"display_header_content mobile mobile_four\">\r\n            <p className=\"description\"> {currentMovie.overview.substring(0, 470)} {currentMovie.overview.length > 470 && ' ...'}</p>\r\n          </section>\r\n          <section className=\"display_header_content mobile mobile_five\">\r\n            <p className=\"description\"> {currentMovie.overview.substring(0, 350)} {currentMovie.overview.length > 350 && ' ...'}</p>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id,\r\n    account: state.account.account\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToFavorites: (accountId, sessionId, mediaType, mediaId) => dispatch(addToFavorites(accountId, sessionId, mediaType, mediaId)),\r\n    addToWatchlist: (accountId, sessionId, mediaType, mediaId, action) => dispatch(addToWatchlist(accountId, sessionId, mediaType, mediaId, action))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayHeader);","import React from 'react';\r\nimport './style/css/CastSlide.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {getCastImage} from '../../utils/functions';\r\n\r\n\r\n\r\nconst CastSlide = ({character}) => {\r\n  const imageStyle = {\r\n    backgroundImage: `url(${getCastImage(character)})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat'\r\n  }\r\n\r\n  return (\r\n    <section className=\"cast_character\">\r\n      <section className=\"cast_image\" style={imageStyle}></section>\r\n      <Link to={`/people/${character.id}`}>\r\n        <p className=\"search_result_movie_link\"><i className=\"fas fa-expand-arrows-alt \"></i></p>  \r\n      </Link>\r\n      <section className=\"cast_data\">\r\n        <p className=\"name\" >{character.name}</p>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CastSlide;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport CastSlide from './CastSlide';\r\n\r\nconst displayCast = cast => {\r\n  return cast.slice(0, 20).map(character => {\r\n    return <CastSlide key={character.id} character={character}/>\r\n  })\r\n}\r\n\r\nconst CastSlider = ({cast, settings}) => {\r\n  return (\r\n    <section className='cast_slider'>\r\n      <Slider {...settings}>\r\n        {displayCast(cast)}\r\n      </Slider>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CastSlider;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DisplayHeader from './DisplayHeader';\r\nimport CastSlider from '../layout/CastSlider';\r\nimport ContentSlider from '../layout/ContentSlider';\r\nimport {fetchShow, fetchShowCredits, fetchShowReviews, fetchSimilarShows, fetchShowGenres} from '../../actions/tvShowActions'; \r\nimport {deleteMessage} from '../../actions/accountActions'; \r\nimport {\r\n  castSliderSettings, movieTvSliderSettings, movieTvSliderSettings1, movieTvSliderSettings2, movieTvSliderSettings3,\r\n  movieTvSliderSettings4, movieTvSliderSettings5, movieTvSliderSettings6, movieTvSliderSettings7, castSliderSettings1\r\n} from '../../utils/settings';\r\nimport './style/css/Display.css';\r\n\r\nclass DisplayTv extends React.Component {\r\n  state = {\r\n    displayMessage: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchShowGenres()\r\n    this.fetchShowData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.showId !== prevProps.match.params.showId) {\r\n      this.fetchShowData();\r\n    }\r\n\r\n    if (this.props.message !== prevProps.message && this.props.message) {\r\n      this.setState({displayMessage: true});\r\n      setTimeout( () => {\r\n        this.setState({displayMessage: false})\r\n        this.props.deleteMessage();\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  fetchShowData = () => {\r\n    this.props.fetchShow(this.props.match.params.showId);\r\n    this.props.fetchShowCredits(this.props.match.params.showId);\r\n    this.props.fetchShowReviews(this.props.match.params.showId);\r\n    this.props.fetchSimilarShows(this.props.match.params.showId);\r\n  }\r\n\r\n  displayCast = cast => {\r\n    switch (cast.length) {\r\n      case 0: \r\n        return <section className=\"empty_data\"><h2>No Cast Available</h2></section>\r\n      case 1:\r\n        return <CastSlider cast={cast} settings={castSliderSettings1} />\r\n      default:\r\n        return <CastSlider cast={cast} settings={castSliderSettings} />\r\n    }\r\n  }\r\n\r\n  displaySimilarShows = (movies, genres) => {\r\n    switch (movies.length) {\r\n      case 0: \r\n        return  <section className=\"empty_data\"><h2>No Similar Shows</h2></section>\r\n      case 1:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings1} />\r\n      case 2:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings2} />\r\n      case 3:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings3} />\r\n      case 4:\r\n        return  <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings4} />\r\n      case 5:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings5} /> \r\n      case 6:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings6} /> \r\n      case 7:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings7} /> \r\n      default:\r\n        return <ContentSlider movies={movies} genres={genres} type='shows' settings={movieTvSliderSettings} />\r\n    }\r\n  }\r\n\r\n  displayReviews = reviews => {\r\n    if (reviews.length > 0) {\r\n      return reviews.map(review => {\r\n        return (\r\n          <section key={review.id} className=\"review\">\r\n            <section className=\"review_username\"><p><span>From: </span> <a href={review.url}>{review.author}</a></p></section>\r\n            <section className=\"review_content\"><p>{review.content}</p></section>\r\n          </section>\r\n        )\r\n      })\r\n    } else {\r\n      return <section className='no_reviews'><h2>No Reviews ...</h2></section>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {currentShow, currentShowCredits, currentShowReviews, similarShows, showGenres, message} = this.props;\r\n    const {displayMessage} = this.state;\r\n\r\n    return (\r\n      <section className=\"display_movie\">\r\n        {currentShow && currentShow.id === Number(this.props.match.params.showId) && (\r\n          <React.Fragment>\r\n            <section className={`message_popup ${displayMessage ? 'active' : ''}`}>\r\n              {message && <h2 className=\"message\">{message}</h2> }\r\n            </section>\r\n            <DisplayHeader currentMovie={currentShow} type='shows' />\r\n            <section className=\"display_movie_data\">\r\n              <section className=\"display_movie_data_cast\">\r\n                <h2>Cast {currentShowCredits && <small>({currentShowCredits.cast.slice(0, 20).length})</small>}</h2>\r\n                {currentShowCredits && this.displayCast(currentShowCredits.cast)}\r\n              </section>\r\n              <section className=\"display_movie_data_similar\">\r\n                <h2>Similar Shows  {similarShows && <small>({similarShows.length})</small>} </h2>\r\n                {similarShows && showGenres && this.displaySimilarShows(similarShows, showGenres)}\r\n              </section>\r\n              <section className=\"display_movie_data_reviews\">\r\n                <h2>Reviews  {currentShowReviews && <small>({currentShowReviews.length})</small>}</h2>\r\n                {currentShowReviews && this.displayReviews(currentShowReviews)}\r\n              </section>\r\n            </section>\r\n          </React.Fragment>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentShow: state.shows.currentShow,\r\n    currentShowCredits: state.shows.currentShowCredits,\r\n    currentShowReviews: state.shows.currentShowReviews,\r\n    similarShows: state.shows.similarShows,\r\n    showGenres: state.shows.showGenres,\r\n    message: state.account.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchShow: id => dispatch(fetchShow(id)),\r\n    fetchShowCredits: id => dispatch(fetchShowCredits(id)),\r\n    fetchShowReviews: id => dispatch(fetchShowReviews(id)),\r\n    fetchSimilarShows: id => dispatch(fetchSimilarShows(id)),\r\n    fetchShowGenres: () => dispatch(fetchShowGenres()),\r\n    deleteMessage: () => dispatch(deleteMessage())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTv);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DisplayHeader from './DisplayHeader';\r\nimport CastSlider from '../layout/CastSlider';\r\nimport ContentSlider from '../layout/ContentSlider';\r\nimport {fetchMovie, fetchMovieCredits, fetchMovieReviews, fetchSimilarMovies, fetchMovieGenres} from '../../actions/movieActions'; \r\nimport {deleteMessage} from '../../actions/accountActions'; \r\nimport {\r\n  castSliderSettings, movieTvSliderSettings, movieTvSliderSettings1, movieTvSliderSettings2, movieTvSliderSettings3,\r\n  movieTvSliderSettings4, movieTvSliderSettings5, movieTvSliderSettings6, movieTvSliderSettings7, castSliderSettings1\r\n} from '../../utils/settings';\r\n\r\nimport './style/css/Display.css';\r\n\r\nclass DisplayMovie extends React.Component {\r\n  state = {\r\n    displayMessage: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieData();\r\n    this.props.fetchMovieGenres();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.movieId !== prevProps.match.params.movieId) {\r\n      this.fetchMovieData();\r\n    }\r\n  \r\n    if (this.props.message !== prevProps.message && this.props.message) {\r\n      this.setState({displayMessage: true});\r\n      setTimeout( () => {\r\n        this.setState({displayMessage: false})\r\n        this.props.deleteMessage();\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  fetchMovieData = () => {\r\n    this.props.fetchMovie(this.props.match.params.movieId);\r\n    this.props.fetchMovieCredits(this.props.match.params.movieId);\r\n    this.props.fetchMovieReviews(this.props.match.params.movieId);\r\n    this.props.fetchSimilarMovies(this.props.match.params.movieId);\r\n  }\r\n\r\n  displayCast = cast => {\r\n    switch (cast.length) {\r\n      case 0: \r\n        return <section className=\"empty_data\"><h2>No Cast Available</h2></section>\r\n      case 1:\r\n        return <CastSlider cast={cast} settings={castSliderSettings1} />\r\n      default:\r\n        return <CastSlider cast={cast} settings={castSliderSettings} />\r\n    }\r\n  }\r\n\r\n\r\n  displaySimilarMovies = (movies, genres) => {\r\n    switch (movies.length) {\r\n      case 0: \r\n        return  <section className=\"empty_data\"><h2>No Similar Movies</h2></section>\r\n      case 1:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings1} />\r\n      case 2:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings2} />\r\n      case 3:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings3} />\r\n      case 4:\r\n        return  <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings4} />\r\n      case 5:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings5} /> \r\n      case 6:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings6} /> \r\n      case 7:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings7} /> \r\n      default:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings} />\r\n    }\r\n  }\r\n\r\n  displayReviews = reviews => {\r\n    if (reviews.length > 0) {\r\n      return reviews.map(review => {\r\n        return (\r\n          <section key={review.id} className=\"review\">\r\n            <section className=\"review_username\"><p><span>From: </span> <a href={review.url}>{review.author}</a></p></section>\r\n            <section className=\"review_content\"><p>{review.content}</p></section>\r\n          </section>\r\n        )\r\n      })\r\n    } else {\r\n      return <section className='no_reviews'><h2>No Reviews ...</h2></section>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {currentMovie, currentMoviesCredits, currentMoviesReviews, similarMovies, movieGenres, message} = this.props;\r\n    const {displayMessage} = this.state;\r\n    return (\r\n      <section className=\"display_movie\">\r\n        {currentMovie && currentMovie.id === Number(this.props.match.params.movieId) && (\r\n          <React.Fragment>\r\n            <section className={`message_popup ${displayMessage ? 'active' : ''}`}>\r\n              {message && <h2 className=\"message\">{message}</h2> }\r\n            </section>\r\n            <DisplayHeader currentMovie={currentMovie} type='movies' />\r\n            <section className=\"display_movie_data\">\r\n              <section className=\"display_movie_data_cast\">\r\n                <h2>Cast {currentMoviesCredits && <small>({currentMoviesCredits.cast.slice(0, 20).length})</small>}</h2>\r\n                {currentMoviesCredits && this.displayCast(currentMoviesCredits.cast)}\r\n              </section>\r\n              <section className=\"display_movie_data_similar\">\r\n                <h2>Similar Movies  {similarMovies && <small>({similarMovies.length})</small>} </h2>\r\n                {similarMovies && movieGenres && this.displaySimilarMovies(similarMovies, movieGenres)}\r\n              </section>\r\n              <section className=\"display_movie_data_reviews\">\r\n                <h2>Reviews  {currentMoviesReviews && <small>({currentMoviesReviews.length})</small>}</h2>\r\n                {currentMoviesReviews && this.displayReviews(currentMoviesReviews)}\r\n              </section>\r\n            </section>\r\n          </React.Fragment>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentMovie: state.movies.currentMovie,\r\n    currentMoviesCredits: state.movies.currentMoviesCredits,\r\n    currentMoviesReviews: state.movies.currentMoviesReviews,\r\n    similarMovies: state.movies.similarMovies,\r\n    movieGenres: state.movies.movieGenres,\r\n    message: state.account.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchMovie: id => dispatch(fetchMovie(id)),\r\n    fetchMovieCredits: id => dispatch(fetchMovieCredits(id)), \r\n    fetchMovieReviews: id => dispatch(fetchMovieReviews(id)), \r\n    fetchSimilarMovies: id => dispatch(fetchSimilarMovies(id)),\r\n    fetchMovieGenres: () => dispatch(fetchMovieGenres()),\r\n    deleteMessage: () => dispatch(deleteMessage())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayMovie);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  fetchPeople, fetchPeopleMovieCredits, fetchPeopleShowCredits, fetchPeopleImages, fetchPeopleTaggedImages\r\n} from '../../actions/peopleActions';\r\nimport {\r\n  castSliderSettings, movieTvSliderSettings, movieTvSliderSettings1, movieTvSliderSettings2, movieTvSliderSettings3,\r\n  movieTvSliderSettings4, movieTvSliderSettings5, movieTvSliderSettings6, movieTvSliderSettings7, castSliderSettings1\r\n} from '../../utils/settings';\r\nimport {fetchShowGenres} from '../../actions/tvShowActions'; \r\nimport {fetchMovieGenres} from '../../actions/movieActions'; \r\nimport ContentSlider from '../layout/ContentSlider';\r\n\r\nimport './style/css/DisplayPeople.css';\r\n\r\nclass DisplayPeople extends React.Component {\r\n  componentDidMount() {\r\n    this.fetchPeopleData();\r\n  }\r\n\r\n  fetchPeopleData = () => {\r\n    this.props.fetchPeople(this.props.match.params.peopleId);\r\n    this.props.fetchPeopleMovieCredits(this.props.match.params.peopleId);\r\n    this.props.fetchPeopleShowCredits(this.props.match.params.peopleId);\r\n    this.props.fetchPeopleImages(this.props.match.params.peopleId);\r\n    this.props.fetchPeopleTaggedImages(this.props.match.params.peopleId);\r\n  }\r\n\r\n  displayMovies = (movies, genres) => {\r\n    switch (movies.length) {\r\n      case 0: \r\n        return  <section className=\"empty_data\"><h2>No Movies</h2></section>\r\n      case 1:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings1} />\r\n      case 2:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings2} />\r\n      case 3:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings3} />\r\n      case 4:\r\n        return  <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings4} />\r\n      case 5:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings5} /> \r\n      case 6:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings6} /> \r\n      case 7:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings7} /> \r\n      default:\r\n        return <ContentSlider movies={movies} genres={genres} type='movies' settings={movieTvSliderSettings} />\r\n    }\r\n  }\r\n\r\n  displayShows = (shows, genres) => {\r\n    switch (shows.length) {\r\n      case 0: \r\n        return  <section className=\"empty_data\"><h2>No Shows</h2></section>\r\n      case 1:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings1} />\r\n      case 2:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings2} />\r\n      case 3:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings3} />\r\n      case 4:\r\n        return  <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings4} />\r\n      case 5:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings5} /> \r\n      case 6:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings6} /> \r\n      case 7:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings7} /> \r\n      default:\r\n        return <ContentSlider movies={shows} genres={genres} type='shows' settings={movieTvSliderSettings} />\r\n    }\r\n  }\r\n\r\n  displayImages = images => {\r\n    let allImages = this.sortImages(images);\r\n    return (\r\n      <section className=\"image_grid\">\r\n        <section className=\"grid_col grid_col_one\">\r\n          {this.displayColImages(allImages.firstCol)}\r\n        </section>\r\n        <section className=\"grid_col grid_col_two\">\r\n          {this.displayColImages(allImages.secondCol)}\r\n        </section>\r\n        <section className=\"grid_col grid_col_three\">\r\n          {this.displayColImages(allImages.thirdCol)}\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  displayColImages = images => {\r\n    return images.map((image, index) => {\r\n      return <img key={index} src={`https://image.tmdb.org/t/p/original/${image.file_path}`} alt={'actor image'}/>\r\n    })\r\n  }\r\n\r\n  sortImages = images => {\r\n    let imageObject = {\r\n      firstCol: [],\r\n      secondCol: [],\r\n      thirdCol: []\r\n    };\r\n    let firstImage = false;\r\n    let secondImage = false;\r\n    images.forEach(image => {\r\n      if (!firstImage && !secondImage) {\r\n        firstImage = true;\r\n        imageObject.firstCol.push(image);\r\n      } else if (firstImage && !secondImage) {\r\n        secondImage = true;\r\n        imageObject.secondCol.push(image);\r\n      } else if (firstImage && secondImage) {\r\n        firstImage = false;\r\n        secondImage = false;\r\n        imageObject.thirdCol.push(image);\r\n      }\r\n    });\r\n    return imageObject;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentPerson, currentPersonMovieCredits, currentPersonShowCredits, currentPersonImages, \r\n      currentPersonTaggedImages, showGenres, movieGenres\r\n    } = this.props;\r\n\r\n    return (\r\n      <section className=\"display_people\">\r\n        {currentPerson && (\r\n          <React.Fragment>\r\n            <section className=\"display_people_header\">\r\n              <section className=\"people_header_background\">\r\n                <section className=\"top\"></section>\r\n                <section className=\"bottom\"></section>\r\n              </section>\r\n              <section className=\"people_header_content\">\r\n                <section className=\"people_profile_image\">\r\n                  <img src={`https://image.tmdb.org/t/p/original/${currentPerson.profile_path}`} alt={currentPerson.name}/>\r\n                </section>\r\n                <section className=\"header_people_data\">\r\n                  <section className=\"top\">\r\n                    <section className=\"header_people_name\">\r\n                      <h2 className=\"name\">{currentPerson.name}</h2>\r\n                    </section>\r\n                    <section className=\"header_people_details\">\r\n                      <section className=\"dob\"><p><span>DOB: </span> {currentPerson.birthday}</p></section>\r\n                      <section className=\"place_of_birth\"><p><span>Birth Place: </span> {currentPerson.place_of_birth}</p></section>\r\n                      <section className=\"bio normal\"><p>{currentPerson.biography} </p></section>\r\n                      <section className=\"bio mobile mobile_one\"><p>{currentPerson.biography.substring(0, 1300)} {currentPerson.biography.length > 1300 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_two\"><p>{currentPerson.biography.substring(0, 1200)} {currentPerson.biography.length > 1200 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_three\"><p>{currentPerson.biography.substring(0, 1030)} {currentPerson.biography.length > 1030 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_four\"><p>{currentPerson.biography.substring(0, 900)} {currentPerson.biography.length > 900 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_five\"><p>{currentPerson.biography.substring(0, 900)} {currentPerson.biography.length > 900 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_six\"><p>{currentPerson.biography.substring(0, 800)} {currentPerson.biography.length > 800 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_seven\"><p>{currentPerson.biography.substring(0, 880)} {currentPerson.biography.length > 880 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_eight\"><p>{currentPerson.biography.substring(0, 800)} {currentPerson.biography.length > 800 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_nine\"><p>{currentPerson.biography.substring(0, 1500)} {currentPerson.biography.length > 1500 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_ten\"><p>{currentPerson.biography.substring(0, 1300)} {currentPerson.biography.length > 1300 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_eleven\"><p>{currentPerson.biography.substring(0, 1500)} {currentPerson.biography.length > 1500 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_twelve\"><p>{currentPerson.biography.substring(0, 1300)} {currentPerson.biography.length > 1300 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_thirteen\"><p>{currentPerson.biography.substring(0, 1050)} {currentPerson.biography.length > 1050 && '...'}</p></section>\r\n                      <section className=\"bio mobile mobile_fourteen\"><p>{currentPerson.biography.substring(0, 900)} {currentPerson.biography.length > 900 && '...'}</p></section>\r\n                    </section>\r\n                  </section>\r\n                </section>\r\n              </section>\r\n            </section>\r\n\r\n            <section className=\"works\">\r\n              <section className=\"person_data\">\r\n                <h2>Movies</h2>\r\n                <section className=\"person_slider\">\r\n                  {currentPersonMovieCredits && this.displayMovies(currentPersonMovieCredits.cast, movieGenres)}\r\n                </section>\r\n              </section>\r\n              <section className=\"person_data\">\r\n                <h2>Shows</h2>\r\n                <section className=\"person_slider\">\r\n                  {currentPersonShowCredits && this.displayShows(currentPersonShowCredits.cast, showGenres)}\r\n                </section>\r\n              </section>\r\n            </section>\r\n            \r\n            <section className=\"person_images\">\r\n              <h2>Images</h2>\r\n              {currentPersonImages && currentPersonTaggedImages && this.displayImages([...currentPersonImages, ...currentPersonTaggedImages])}\r\n            </section>\r\n          </React.Fragment>\r\n        )}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentPerson: state.people.currentPerson,\r\n    currentPersonMovieCredits: state.people.currentPersonMovieCredits,\r\n    currentPersonShowCredits: state.people.currentPersonShowCredits,\r\n    currentPersonImages: state.people.currentPersonImages,\r\n    currentPersonTaggedImages: state.people.currentPersonTaggedImages,\r\n    showGenres: state.shows.showGenres,\r\n    movieGenres: state.movies.movieGenres\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchPeople: id => dispatch(fetchPeople(id)),\r\n    fetchPeopleMovieCredits: id => dispatch(fetchPeopleMovieCredits(id)),\r\n    fetchPeopleShowCredits: id => dispatch(fetchPeopleShowCredits(id)),\r\n    fetchPeopleImages: id => dispatch(fetchPeopleImages(id)),\r\n    fetchPeopleTaggedImages: id => dispatch(fetchPeopleTaggedImages(id)),\r\n    fetchShowGenres: () => dispatch(fetchShowGenres()),\r\n    fetchMovieGenres: () => dispatch(fetchMovieGenres())\r\n  }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayPeople);","import * as actionTypes from './types';\r\nimport axios from 'axios';\r\nimport {MOVIEDBAPI} from '../api_keys';\r\n\r\nexport const fetchPeople = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/person/${id}?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_PEOPLE,\r\n      payload: {\r\n        currentPerson: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPeopleMovieCredits = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_PEOPLE_MOVIE_CREDITS,\r\n      payload: {\r\n        currentPersonMovieCredits: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPeopleShowCredits = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${MOVIEDBAPI}&language=en-US`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_PEOPLE_SHOW_CREDITS,\r\n      payload: {\r\n        currentPersonShowCredits: results.data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPeopleImages = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/person/${id}/images?api_key=${MOVIEDBAPI}`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_PEOPLE_IMAGES,\r\n      payload: {\r\n        currentPersonImages: results.data.profiles\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchPeopleTaggedImages = id => {\r\n  return async (dispatch) => {\r\n    const results = await axios.get(`https://api.themoviedb.org/3/person/${id}/tagged_images?api_key=${MOVIEDBAPI}&language=en-US&page=1`);\r\n    dispatch({\r\n      type: actionTypes.FETCH_PEOPLE_TAGGED_IMAGES,\r\n      payload: {\r\n        currentPersonTaggedImages: results.data.results\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {setSession, logout} from '../../actions/authActions';\r\nimport {setAccount} from '../../actions/accountActions';\r\nimport './style/css/MyNavbar.css';\r\n\r\nclass MyNavbar extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    isMobile: false,\r\n    searchQuery: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onWindowResize();\r\n    if (localStorage.getItem('session_id')) {\r\n      this.props.setSession(localStorage.getItem('session_id'));\r\n    }\r\n    if (localStorage.getItem('account')) {\r\n      this.props.setAccount(JSON.parse(localStorage.getItem('account')));\r\n    }\r\n    window.addEventListener('resize', this.onWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onWindowResize);\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    if (this.navbar.clientWidth < 780 && !this.state.isMobile) {\r\n      this.setState({isMobile: true})\r\n    } else if (this.navbar.clientWidth >= 780 && this.state.isMobile) {\r\n      this.setState({isMobile: false})\r\n    }\r\n  }\r\n\r\n  onSearchKeyDown = e => {\r\n    if (e.keyCode === 13 && e.target.value) {\r\n      this.props.history.push(`/search/${e.target.value}`)\r\n    }\r\n  }\r\n\r\n  onLogoutClick = () => this.props.logout();\r\n\r\n  navbarClass = (isMobile) => isMobile ? 'mobile' : '';\r\n\r\n  render() {\r\n    const {session_id} = this.props;\r\n    const {isMobile} = this.state;\r\n    return (\r\n      <nav className={`navbar ${this.navbarClass(isMobile)}`} ref={ node => this.navbar = node }>\r\n        <section className=\"navbar_brand\">\r\n          {isMobile ? <NavLink className=\"navbar_link\" to=\"/\">M SB</NavLink> : <NavLink className=\"navbar_link\" to=\"/\">Movie SearchBase</NavLink>}\r\n          <input className='navbar_search' type='text' placeholder=\"Search\" onKeyDown={this.onSearchKeyDown} />\r\n        </section>\r\n        <section className='navbar_links'>\r\n          {session_id && isMobile && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav_icon\" title=\"Account\" to=\"/account\"><i className=\"far fa-2x fa-user-circle\"></i></NavLink>\r\n              <NavLink className=\"navbar_link signout\" title=\"Sign Out\" to=\"\" onClick={() => this.onLogoutClick()} ><i className=\"fas fa-sign-out-alt\"></i></NavLink>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {session_id && !isMobile && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav_icon\" title=\"Account\" to=\"/account\"><i className=\"far fa-2x fa-user-circle\"></i></NavLink>\r\n              <NavLink className=\"navbar_link signout\" title=\"Sign Out\" to=\"\" onClick={() => this.onLogoutClick()} >Sign Out</NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          \r\n          {!session_id && isMobile && (\r\n            <React.Fragment>\r\n              <NavLink className=\"navbar_link signin\" title=\"Sign In\" to=\"/login\"><i className=\"fas fa-sign-in-alt\"></i></NavLink>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {!session_id && !isMobile && (\r\n            <React.Fragment>\r\n              <NavLink className=\"navbar_link signin\" title=\"Sign In\" to=\"/login\">Sign In</NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </section>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSession: session_id => dispatch(setSession(session_id)),\r\n    setAccount: account => dispatch(setAccount(account)),\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyNavbar);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink } from 'react-router-dom';\r\nimport './style/css/MyFooter.css';\r\n\r\nclass MyFooter extends React.Component {\r\n  onSearchKeyDown = e => {\r\n    if (e.keyCode === 13 && e.target.value) {\r\n      this.props.history.push(`/search/${e.target.value}`)\r\n    }\r\n  }\r\n  render() {\r\n    const {session_id} = this.props;\r\n    return (\r\n      <footer className=\"footer\">\r\n        <section className=\"footer_content\">\r\n          <section className=\"footer_nav\">\r\n            <NavLink className=\"nav_icon\" to=\"/\"><i className=\"fa fa-2x fa-home\"></i> <span>Home</span></NavLink>\r\n            {session_id && (\r\n              <NavLink className=\"nav_icon\" to=\"/account\"><i className=\"far fa-2x fa-user-circle\"></i> <span>Account</span></NavLink>\r\n            )}\r\n            <input className='navbar_search' type='text' placeholder=\"Search\" onKeyDown={this.onSearchKeyDown} />\r\n          </section>\r\n          <a href='https://www.themoviedb.org/'>\r\n            <img src=\"http://localhost:3000/images/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png\" alt=\"\" />\r\n          </a>\r\n        </section>\r\n        <section className=\"footer_meta\">\r\n          <a className=\"nav_icon\" id='meta_left' href=\"mailto:miguel@miguelgarcia.app\"><i className=\"fas fa-envelope-open\"></i> <span>miguel@miguelgarcia.app</span></a> \r\n          <p id='meta_center'>Copyright ©2019 - Created by <a href='https://www.miguelgarcia.app'>Miguel Garcia</a></p> \r\n          <a className=\"nav_icon\" id='meta_right' href=\"https://www.miguelgarcia.app\"><i className=\"far fa-window-maximize\"></i> <span>miguelgarcia.app</span></a>\r\n        </section>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MyFooter);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter, Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport {BrowserRouter, Switch, Route, withRouter} from 'react-router-dom';\nimport {Provider, connect} from 'react-redux';\nimport store from './store';\n\nimport App from './components/App';\nimport Login from './components/Auth/Login';\nimport Account from './components/Account/Account';\nimport SearchResults from './components/Search/SearchResults';\nimport DisplayTv from './components/Display/DisplayTv';\nimport DisplayMovie from './components/Display/DisplayMovie';\nimport DisplayPeople from './components/Display/DisplayPeople';\nimport MyNavbar from './components/layout/MyNavbar';\nimport MyFooter from './components/layout/MyFooter';\nimport * as serviceWorker from './serviceWorker';\n\nimport createHashHistory from 'history/createHashHistory';\nimport createHistory from 'history/createBrowserHistory';\n    \nconst hashHistory = createHashHistory({basename: process.env.PUBLIC_URL + '/movie-searchbase'});\nconst history = createHistory({basename: process.env.PUBLIC_URL + '/movie-searchbase'});\n\nconst Root = () => {\n  // <BrowserRouter basename='/movie-searchbase'>\n  // <BrowserRouter basename={process.env.PUBLIC_URL}>\n  \n  // <BrowserRouter basename={`${process.env.PUBLIC_URL}/movie-searchbase`}>\n  return (\n    <BrowserRouter history={history}>\n      <React.Fragment>\n        <Route path='/' component={MyNavbar} />\n        {/* <Route path={process.env.PUBLIC_URL + '/'} component={MyNavbar} /> */}\n        <Switch>\n          {/* <Route exact path={`${process.env.PUBLIC_URL} + /`} component={App} />  */}\n          <Route exact path='/' component={App} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /login`} component={Login} /> */}\n          <Route path='/login' component={Login} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /account`} component={Account} /> */}\n          <Route path='/account' component={Account} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /search/:searchQuery`} component={SearchResults} /> */}\n          <Route path='/search/:searchQuery' component={SearchResults} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /shows/:showId`} component={DisplayTv} /> */}\n          <Route path='/shows/:showId' component={DisplayTv} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /movies/:movieId`} component={DisplayMovie} /> */}\n          <Route path='/movies/:movieId' component={DisplayMovie} />\n          {/* <Route path={`${process.env.PUBLIC_URL} + /people/:peopleId`} component={DisplayPeople} />  */}\n          <Route path='/people/:peopleId' component={DisplayPeople} />\n          {/* add a redirect to home here */}\n        </Switch>\n        <Route path='/' component={MyFooter} />\n        {/* <Route path={`${process.env.PUBLIC_URL} + /`} component={MyFooter} /> */}\n      </React.Fragment>\n    </BrowserRouter>\n  )\n}\n\nconst RootWithAuth = withRouter(connect()(Root));\n\nconst RootWithRouter = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <RootWithAuth />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nReactDOM.render(<RootWithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n{/* <Route exact path={`${process.env.PUBLIC_URL} + /`} component={App} />\n<Route path={`${process.env.PUBLIC_URL} + /login`} component={Login} />\n<Route path={`${process.env.PUBLIC_URL} + /account`} component={Account} />\n<Route path={`${process.env.PUBLIC_URL} + /search/:searchQuery`} component={SearchResults} />\n<Route path={`${process.env.PUBLIC_URL} + /shows/:showId`} component={DisplayTv} />\n<Route path={`${process.env.PUBLIC_URL} + /movies/:movieId`} component={DisplayMovie} />\n<Route path={`${process.env.PUBLIC_URL} + /people/:peopleId`} component={DisplayPeople} /> */}"],"sourceRoot":""}